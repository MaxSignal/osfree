
(* lexical analyzer template (TP Lex V3.0), V1.0 3-2-91 AG *)

{ WARNING: this code is autogenerated by lex from }
{ corresponding .l file, do not edit it by hand!  }

(* global definitions: *)

// **********************************************************************
//
// Copyright (c) 2001 - 2002 MT Tools.
//
// All Rights Reserved
//
// MT_DORB is based in part on the product DORB,
// written by Shadrin Victor
//
// See Readme.txt for contact information
//
// **********************************************************************

{$H+}

const
  _n = chr(10); // \n
  _t = chr(9); // \t
  _v = chr(11); // \v
  _b = chr(8); // \b
  _r = chr(13); // \r
  _f = chr(12); // \f
  _a = chr(7); // \a
  _bslash = chr(92); // \\
  _sq = chr(39); // \'
  _dq = chr(34); // \"

function ascii_to_longlong( base: integer; s: PChar) : longint;
var
  c: char;
begin
  result := 0;
  while s^ <> chr(0) do
    begin
      c := s^;
      s := PChar(integer(s)+1);
      if  c >= 'a' then
        c := chr(ord(c) - (ord('a') - ord('A')));
      c := chr(ord(c) - ord('0'));
      if ord(c) > 9 then
        c := chr(ord(c) - (ord('A') - ord('0') - 10));
      result := result * base + ord(c);
  end
end;

function translate_char( const  s: string): char;
var
  c: char;
begin
  if  s[1] <> '\' then
    begin
      result := s[1];
      exit;
    end;
  c := s[2];
  case c of
  'n': result := _n;
  't': result := _t;
  'v': result := _v;
  'b': result := _b;
  'r': result := _r;
  'f': result := _f;
  'a': result := _a;
  '\': result := _bslash;
  '''': result := _sq;
  '"': result := _dq;
  'x','X' : result := chr(ascii_to_longlong( 16, PChar(integer(PChar(s))+2)));
  else
    // Gotta be an octal
    result := chr(ascii_to_longlong( 8, PChar(s)));
  end
end;

function translate_wchar(const s: string): char;
begin
  { TODO : implement transalate }
  Result := Char(s[1]);
end;


function yylex : integer;

procedure yyaction ( yyruleno : Integer );
  (* local definitions: *)

begin
  (* actions: *)
  case yyruleno of
  1:
                        ;
  2:
                        inc(idl_line_no);
  3:
                        ;
  4:
                        begin
                          yylval.yy_str := yytext;
                          inc(idl_line_no);
                          return(T_PRAGMA);
                        end;
  5:
                        begin
                          preprocessor_directive( yytext );
                          yylval.yy_str := yytext;
                          return(T_INCLUDE);
                        end;
  6:
                        ;
  7:
                        return(T_LEFT_CURLY_BRACKET);
  8:
                        return(T_RIGHT_CURLY_BRACKET);
  9:
                        return(T_LEFT_SQUARE_BRACKET);
  10:
                        return(T_RIGHT_SQUARE_BRACKET);
  11:
                        return(T_LEFT_PARANTHESIS);
  12:
                        return(T_RIGHT_PARANTHESIS);
  13:
                        return(T_COLON);
  14:
                        return(T_COMMA);
  15:
                        return(T_SEMICOLON);
  16:
                        return(T_EQUAL);
  17:
                        return(T_SHIFTRIGHT);
  18:
                        return(T_SHIFTLEFT);
  19:
                        return(T_PLUS_SIGN);
  20:
                        return(T_MINUS_SIGN);
  21:
                        return(T_ASTERISK);
  22:
                        return(T_SOLIDUS);
  23:
                        return(T_PERCENT_SIGN);
  24:
                        return(T_TILDE);
  25:
                        return(T_VERTICAL_LINE);
  26:
                        return(T_CIRCUMFLEX);
  27:
                        return(T_AMPERSAND);
  28:
                        return(T_LESS_THAN_SIGN);
  29:
                        return(T_GREATER_THAN_SIGN);

  30:
                        return(T_IMPORT);
  31:
                        return(T_CONST);
  32:
                        return(T_TYPEDEF);
  33:
                        return(T_FLOAT);
  34:
                        return(T_DOUBLE);
  35:
                        return(T_CHAR);
  36:
                        return(T_WCHAR);
  37:
                        return(T_FIXED);
  38:
                        return(T_BOOLEAN);
  39:
                        return(T_STRING);
  40:
                        return(T_WSTRING);
  41:
                        return(T_VOID);
  42:
                        return(T_UNSIGNED);
  43:
                        return(T_LONG);
  44:
                        return(T_SHORT);
  45:
                        return(T_FALSE);
  46:
                        return(T_TRUE);
  47:
                        return(T_STRUCT);
  48:
                        return(T_UNION);
  49:
                        return(T_SWITCH);
  50:
                        return(T_CASE);
  51:
                        return(T_DEFAULT);
  52:
                        return(T_ENUM);
  53:
                        return(T_IN);
  54:
                        return(T_OUT);
  55:
                        return(T_INTERFACE);
  56:
                        return(T_ABSTRACT);
  57:
                        return(T_VALUETYPE);
  58:
                        return(T_TRUNCATABLE);
  59:
                        return(T_SUPPORTS);
  60:
                        return(T_CUSTOM);
  61:
                        return(T_PUBLIC);
  62:
                        return(T_PRIVATE);
  63:
                        return(T_FACTORY);
  64:
                        return(T_NATIVE);
  65:
                        return(T_VALUEBASE);
  66:
                        return(T_SCOPE);
  67:
                        return(T_MODULE);
  68:
                        return(T_OCTET);
  69:
                        return(T_ANY);
  70:
                        return(T_SEQUENCE);
  71:
                        return(T_READONLY);
  72:
                        return(T_ATTRIBUTE);
  73:
                        return(T_EXCEPTION);
  74:
                        return(T_ONEWAY);
  75:
                        return(T_INOUT);
  76:
                        return(T_RAISES);
  77:
                        return(T_CONTEXT);
  78:
                        return(T_OBJECT);
  79:
                        return(T_TYPEID);
  80:
                        return(T_TYPEPREFIX);
  81:
                        return(T_LOCAL);
  82:
                        begin
                          if yytext[1] = '_' then
                            yylval.yyident := copy(yytext,2,200)
                          else
                            yylval.yyident := yytext;
                          return(T_IDENTIFIER);
                        end;
  83,
  84,
  85,
  86,
  87,
  88:
                        begin
                          if (DecimalSeparator <> '.') and (pos('.',yytext) > 0) then
                            yytext[pos('.',yytext)] := DecimalSeparator
                          else if (DecimalSeparator <> ',') and (pos(',',yytext) > 0) then
                            yytext[pos(',',yytext)] := DecimalSeparator;
                          yylval.yy_float := strtofloat(yytext);
                          return(T_FLOATING_PT_LITERAL);
                        end;
  89,
  90,
  91,
  92:
                        begin
                          if (DecimalSeparator <> '.') and (pos('.',yytext) > 0) then
                            yytext[pos('.',yytext)] := DecimalSeparator
                          else if (DecimalSeparator <> ',') and (pos(',',yytext) > 0) then
                            yytext[pos(',',yytext)] := DecimalSeparator;
                          yylval.yy_float := strtofloat(yytext);
                          return(T_FLOATING_PT_LITERAL);
                        end;
  93:
                        begin
                          yylval.yy_int := strtoint(yytext );
                          return(T_INTEGER_LITERAL);
                        end;
  94:
                        begin
                          yylval.yy_int := ascii_to_longlong(8,PChar(AnsiString(yytext)));
                          return(T_INTEGER_LITERAL);
                        end;
  95:
                        begin
                          yylval.yy_int := strtoint(yytext);
                          return(T_INTEGER_LITERAL);
                        end;
  96:
                        begin
                          yytext := copy(yytext,2,length(yytext)-2);
                          if yytext[1] = '\' then
                            yylval.yy_char := translate_char(yytext)
                          else
                            yylval.yy_char := yytext[1];
                          return(T_CHARACTER_LITERAL);
                        end;
  97:
                        begin
                          yytext := copy(yytext,3,length(yytext)-3);
                          if yytext[1] = '\' then
                            yylval.yy_wchar := translate_wchar(yytext)
                          else
                            yylval.yy_wchar := Char(yytext[1]);
                          return(T_WCHARACTER_LITERAL);
                        end;
  98:
                        begin
                          yylval.yy_str := copy(yytext,2,length(yytext)-2);
                          return(T_STRING_LITERAL);
                        end;
  99:
                        begin
                          yylval.yy_wstr := copy(yytext,3,length(yytext)-3);
                          return(T_WSTRING_LITERAL);
                        end;
  100:
                        return(T_UNKNOWN);

  end;
end(*yyaction*);

(* DFA table: *)

type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 432;
yynmatches = 432;
yyntrans   = 830;
yynstates  = 400;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  { 1: }
  { 2: }
  1,
  100,
  { 3: }
  2,
  { 4: }
  22,
  100,
  { 5: }
  100,
  { 6: }
  7,
  100,
  { 7: }
  8,
  100,
  { 8: }
  9,
  100,
  { 9: }
  10,
  100,
  { 10: }
  11,
  100,
  { 11: }
  12,
  100,
  { 12: }
  13,
  100,
  { 13: }
  14,
  100,
  { 14: }
  15,
  100,
  { 15: }
  16,
  100,
  { 16: }
  29,
  100,
  { 17: }
  28,
  100,
  { 18: }
  19,
  100,
  { 19: }
  20,
  100,
  { 20: }
  21,
  100,
  { 21: }
  23,
  100,
  { 22: }
  24,
  100,
  { 23: }
  25,
  100,
  { 24: }
  26,
  100,
  { 25: }
  27,
  100,
  { 26: }
  82,
  100,
  { 27: }
  82,
  100,
  { 28: }
  82,
  100,
  { 29: }
  82,
  100,
  { 30: }
  82,
  100,
  { 31: }
  82,
  100,
  { 32: }
  82,
  100,
  { 33: }
  82,
  100,
  { 34: }
  82,
  100,
  { 35: }
  82,
  100,
  { 36: }
  82,
  100,
  { 37: }
  82,
  100,
  { 38: }
  82,
  100,
  { 39: }
  82,
  100,
  { 40: }
  82,
  100,
  { 41: }
  82,
  100,
  { 42: }
  82,
  100,
  { 43: }
  82,
  100,
  { 44: }
  82,
  100,
  { 45: }
  82,
  100,
  { 46: }
  82,
  100,
  { 47: }
  82,
  100,
  { 48: }
  82,
  100,
  { 49: }
  94,
  100,
  { 50: }
  100,
  { 51: }
  93,
  100,
  { 52: }
  100,
  { 53: }
  82,
  100,
  { 54: }
  100,
  { 55: }
  100,
  { 56: }
  100,
  { 57: }
  3,
  { 58: }
  { 59: }
  66,
  { 60: }
  17,
  { 61: }
  18,
  { 62: }
  82,
  { 63: }
  53,
  82,
  { 64: }
  82,
  { 65: }
  82,
  { 66: }
  82,
  { 67: }
  82,
  { 68: }
  82,
  { 69: }
  82,
  { 70: }
  82,
  { 71: }
  82,
  { 72: }
  82,
  { 73: }
  82,
  { 74: }
  82,
  { 75: }
  82,
  { 76: }
  82,
  { 77: }
  82,
  { 78: }
  82,
  { 79: }
  82,
  { 80: }
  82,
  { 81: }
  82,
  { 82: }
  82,
  { 83: }
  82,
  { 84: }
  82,
  { 85: }
  82,
  { 86: }
  82,
  { 87: }
  82,
  { 88: }
  82,
  { 89: }
  82,
  { 90: }
  82,
  { 91: }
  82,
  { 92: }
  82,
  { 93: }
  82,
  { 94: }
  82,
  { 95: }
  82,
  { 96: }
  82,
  { 97: }
  82,
  { 98: }
  82,
  { 99: }
  82,
  { 100: }
  82,
  { 101: }
  82,
  { 102: }
  82,
  { 103: }
  82,
  { 104: }
  82,
  { 105: }
  82,
  { 106: }
  { 107: }
  86,
  { 108: }
  { 109: }
  89,
  { 110: }
  94,
  { 111: }
  95,
  { 112: }
  87,
  { 113: }
  93,
  { 114: }
  { 115: }
  { 116: }
  { 117: }
  { 118: }
  { 119: }
  { 120: }
  98,
  { 121: }
  { 122: }
  { 123: }
  { 124: }
  6,
  { 125: }
  { 126: }
  82,
  { 127: }
  82,
  { 128: }
  82,
  { 129: }
  82,
  { 130: }
  82,
  { 131: }
  82,
  { 132: }
  82,
  { 133: }
  82,
  { 134: }
  82,
  { 135: }
  82,
  { 136: }
  82,
  { 137: }
  82,
  { 138: }
  82,
  { 139: }
  82,
  { 140: }
  82,
  { 141: }
  82,
  { 142: }
  82,
  { 143: }
  82,
  { 144: }
  82,
  { 145: }
  82,
  { 146: }
  82,
  { 147: }
  82,
  { 148: }
  82,
  { 149: }
  82,
  { 150: }
  82,
  { 151: }
  82,
  { 152: }
  82,
  { 153: }
  82,
  { 154: }
  82,
  { 155: }
  82,
  { 156: }
  82,
  { 157: }
  82,
  { 158: }
  54,
  82,
  { 159: }
  82,
  { 160: }
  82,
  { 161: }
  82,
  { 162: }
  69,
  82,
  { 163: }
  82,
  { 164: }
  82,
  { 165: }
  82,
  { 166: }
  82,
  { 167: }
  82,
  { 168: }
  82,
  { 169: }
  82,
  { 170: }
  82,
  { 171: }
  82,
  { 172: }
  85,
  { 173: }
  { 174: }
  90,
  { 175: }
  { 176: }
  84,
  { 177: }
  { 178: }
  91,
  { 179: }
  96,
  { 180: }
  { 181: }
  { 182: }
  { 183: }
  { 184: }
  { 185: }
  99,
  { 186: }
  { 187: }
  { 188: }
  { 189: }
  { 190: }
  { 191: }
  82,
  { 192: }
  82,
  { 193: }
  82,
  { 194: }
  82,
  { 195: }
  82,
  { 196: }
  35,
  82,
  { 197: }
  50,
  82,
  { 198: }
  82,
  { 199: }
  82,
  { 200: }
  82,
  { 201: }
  82,
  { 202: }
  82,
  { 203: }
  82,
  { 204: }
  82,
  { 205: }
  82,
  { 206: }
  82,
  { 207: }
  82,
  { 208: }
  82,
  { 209: }
  82,
  { 210: }
  82,
  { 211: }
  82,
  { 212: }
  82,
  { 213: }
  82,
  { 214: }
  82,
  { 215: }
  41,
  82,
  { 216: }
  82,
  { 217: }
  82,
  { 218: }
  82,
  { 219: }
  43,
  82,
  { 220: }
  82,
  { 221: }
  82,
  { 222: }
  46,
  82,
  { 223: }
  52,
  82,
  { 224: }
  82,
  { 225: }
  82,
  { 226: }
  82,
  { 227: }
  82,
  { 228: }
  82,
  { 229: }
  82,
  { 230: }
  82,
  { 231: }
  82,
  { 232: }
  82,
  { 233: }
  82,
  { 234: }
  82,
  { 235: }
  82,
  { 236: }
  82,
  { 237: }
  92,
  { 238: }
  { 239: }
  83,
  { 240: }
  { 241: }
  { 242: }
  { 243: }
  88,
  { 244: }
  { 245: }
  { 246: }
  97,
  { 247: }
  { 248: }
  { 249: }
  { 250: }
  { 251: }
  { 252: }
  { 253: }
  { 254: }
  { 255: }
  { 256: }
  { 257: }
  { 258: }
  82,
  { 259: }
  82,
  { 260: }
  75,
  82,
  { 261: }
  31,
  82,
  { 262: }
  82,
  { 263: }
  82,
  { 264: }
  82,
  { 265: }
  82,
  { 266: }
  82,
  { 267: }
  82,
  { 268: }
  33,
  82,
  { 269: }
  37,
  82,
  { 270: }
  82,
  { 271: }
  82,
  { 272: }
  82,
  { 273: }
  36,
  82,
  { 274: }
  82,
  { 275: }
  82,
  { 276: }
  82,
  { 277: }
  82,
  { 278: }
  44,
  82,
  { 279: }
  82,
  { 280: }
  82,
  { 281: }
  82,
  { 282: }
  82,
  { 283: }
  82,
  { 284: }
  48,
  82,
  { 285: }
  81,
  82,
  { 286: }
  45,
  82,
  { 287: }
  82,
  { 288: }
  68,
  82,
  { 289: }
  82,
  { 290: }
  82,
  { 291: }
  82,
  { 292: }
  82,
  { 293: }
  82,
  { 294: }
  82,
  { 295: }
  82,
  { 296: }
  82,
  { 297: }
  82,
  { 298: }
  82,
  { 299: }
  82,
  { 300: }
  { 301: }
  { 302: }
  { 303: }
  { 304: }
  { 305: }
  { 306: }
  { 307: }
  { 308: }
  { 309: }
  { 310: }
  { 311: }
  { 312: }
  { 313: }
  { 314: }
  30,
  82,
  { 315: }
  82,
  { 316: }
  82,
  { 317: }
  60,
  82,
  { 318: }
  82,
  { 319: }
  79,
  82,
  { 320: }
  82,
  { 321: }
  82,
  { 322: }
  82,
  { 323: }
  34,
  82,
  { 324: }
  82,
  { 325: }
  82,
  { 326: }
  82,
  { 327: }
  39,
  82,
  { 328: }
  47,
  82,
  { 329: }
  49,
  82,
  { 330: }
  82,
  { 331: }
  82,
  { 332: }
  82,
  { 333: }
  82,
  { 334: }
  82,
  { 335: }
  74,
  82,
  { 336: }
  82,
  { 337: }
  82,
  { 338: }
  61,
  82,
  { 339: }
  82,
  { 340: }
  64,
  82,
  { 341: }
  82,
  { 342: }
  67,
  82,
  { 343: }
  82,
  { 344: }
  76,
  82,
  { 345: }
  78,
  82,
  { 346: }
  { 347: }
  { 348: }
  { 349: }
  { 350: }
  { 351: }
  { 352: }
  { 353: }
  82,
  { 354: }
  77,
  82,
  { 355: }
  32,
  82,
  { 356: }
  82,
  { 357: }
  82,
  { 358: }
  63,
  82,
  { 359: }
  51,
  82,
  { 360: }
  40,
  82,
  { 361: }
  38,
  82,
  { 362: }
  82,
  { 363: }
  82,
  { 364: }
  82,
  { 365: }
  82,
  { 366: }
  82,
  { 367: }
  82,
  { 368: }
  82,
  { 369: }
  62,
  82,
  { 370: }
  82,
  { 371: }
  82,
  { 372: }
  { 373: }
  { 374: }
  { 375: }
  5,
  6,
  { 376: }
  4,
  { 377: }
  82,
  { 378: }
  82,
  { 379: }
  82,
  { 380: }
  59,
  82,
  { 381: }
  70,
  82,
  { 382: }
  82,
  { 383: }
  42,
  82,
  { 384: }
  82,
  { 385: }
  56,
  82,
  { 386: }
  82,
  { 387: }
  82,
  { 388: }
  71,
  82,
  { 389: }
  4,
  6,
  { 390: }
  55,
  82,
  { 391: }
  82,
  { 392: }
  82,
  { 393: }
  57,
  82,
  { 394: }
  73,
  82,
  { 395: }
  72,
  82,
  { 396: }
  65,
  82,
  { 397: }
  80,
  82,
  { 398: }
  82,
  { 399: }
  58,
  82
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
{ 1: }
{ 2: }
  1,
  100,
{ 3: }
  2,
{ 4: }
  22,
  100,
{ 5: }
  100,
{ 6: }
  7,
  100,
{ 7: }
  8,
  100,
{ 8: }
  9,
  100,
{ 9: }
  10,
  100,
{ 10: }
  11,
  100,
{ 11: }
  12,
  100,
{ 12: }
  13,
  100,
{ 13: }
  14,
  100,
{ 14: }
  15,
  100,
{ 15: }
  16,
  100,
{ 16: }
  29,
  100,
{ 17: }
  28,
  100,
{ 18: }
  19,
  100,
{ 19: }
  20,
  100,
{ 20: }
  21,
  100,
{ 21: }
  23,
  100,
{ 22: }
  24,
  100,
{ 23: }
  25,
  100,
{ 24: }
  26,
  100,
{ 25: }
  27,
  100,
{ 26: }
  82,
  100,
{ 27: }
  82,
  100,
{ 28: }
  82,
  100,
{ 29: }
  82,
  100,
{ 30: }
  82,
  100,
{ 31: }
  82,
  100,
{ 32: }
  82,
  100,
{ 33: }
  82,
  100,
{ 34: }
  82,
  100,
{ 35: }
  82,
  100,
{ 36: }
  82,
  100,
{ 37: }
  82,
  100,
{ 38: }
  82,
  100,
{ 39: }
  82,
  100,
{ 40: }
  82,
  100,
{ 41: }
  82,
  100,
{ 42: }
  82,
  100,
{ 43: }
  82,
  100,
{ 44: }
  82,
  100,
{ 45: }
  82,
  100,
{ 46: }
  82,
  100,
{ 47: }
  82,
  100,
{ 48: }
  82,
  100,
{ 49: }
  94,
  100,
{ 50: }
  100,
{ 51: }
  93,
  100,
{ 52: }
  100,
{ 53: }
  82,
  100,
{ 54: }
  100,
{ 55: }
  100,
{ 56: }
  100,
{ 57: }
  3,
{ 58: }
{ 59: }
  66,
{ 60: }
  17,
{ 61: }
  18,
{ 62: }
  82,
{ 63: }
  53,
  82,
{ 64: }
  82,
{ 65: }
  82,
{ 66: }
  82,
{ 67: }
  82,
{ 68: }
  82,
{ 69: }
  82,
{ 70: }
  82,
{ 71: }
  82,
{ 72: }
  82,
{ 73: }
  82,
{ 74: }
  82,
{ 75: }
  82,
{ 76: }
  82,
{ 77: }
  82,
{ 78: }
  82,
{ 79: }
  82,
{ 80: }
  82,
{ 81: }
  82,
{ 82: }
  82,
{ 83: }
  82,
{ 84: }
  82,
{ 85: }
  82,
{ 86: }
  82,
{ 87: }
  82,
{ 88: }
  82,
{ 89: }
  82,
{ 90: }
  82,
{ 91: }
  82,
{ 92: }
  82,
{ 93: }
  82,
{ 94: }
  82,
{ 95: }
  82,
{ 96: }
  82,
{ 97: }
  82,
{ 98: }
  82,
{ 99: }
  82,
{ 100: }
  82,
{ 101: }
  82,
{ 102: }
  82,
{ 103: }
  82,
{ 104: }
  82,
{ 105: }
  82,
{ 106: }
{ 107: }
  86,
{ 108: }
{ 109: }
  89,
{ 110: }
  94,
{ 111: }
  95,
{ 112: }
  87,
{ 113: }
  93,
{ 114: }
{ 115: }
{ 116: }
{ 117: }
{ 118: }
{ 119: }
{ 120: }
  98,
{ 121: }
{ 122: }
{ 123: }
{ 124: }
  6,
{ 125: }
{ 126: }
  82,
{ 127: }
  82,
{ 128: }
  82,
{ 129: }
  82,
{ 130: }
  82,
{ 131: }
  82,
{ 132: }
  82,
{ 133: }
  82,
{ 134: }
  82,
{ 135: }
  82,
{ 136: }
  82,
{ 137: }
  82,
{ 138: }
  82,
{ 139: }
  82,
{ 140: }
  82,
{ 141: }
  82,
{ 142: }
  82,
{ 143: }
  82,
{ 144: }
  82,
{ 145: }
  82,
{ 146: }
  82,
{ 147: }
  82,
{ 148: }
  82,
{ 149: }
  82,
{ 150: }
  82,
{ 151: }
  82,
{ 152: }
  82,
{ 153: }
  82,
{ 154: }
  82,
{ 155: }
  82,
{ 156: }
  82,
{ 157: }
  82,
{ 158: }
  54,
  82,
{ 159: }
  82,
{ 160: }
  82,
{ 161: }
  82,
{ 162: }
  69,
  82,
{ 163: }
  82,
{ 164: }
  82,
{ 165: }
  82,
{ 166: }
  82,
{ 167: }
  82,
{ 168: }
  82,
{ 169: }
  82,
{ 170: }
  82,
{ 171: }
  82,
{ 172: }
  85,
{ 173: }
{ 174: }
  90,
{ 175: }
{ 176: }
  84,
{ 177: }
{ 178: }
  91,
{ 179: }
  96,
{ 180: }
{ 181: }
{ 182: }
{ 183: }
{ 184: }
{ 185: }
  99,
{ 186: }
{ 187: }
{ 188: }
{ 189: }
{ 190: }
{ 191: }
  82,
{ 192: }
  82,
{ 193: }
  82,
{ 194: }
  82,
{ 195: }
  82,
{ 196: }
  35,
  82,
{ 197: }
  50,
  82,
{ 198: }
  82,
{ 199: }
  82,
{ 200: }
  82,
{ 201: }
  82,
{ 202: }
  82,
{ 203: }
  82,
{ 204: }
  82,
{ 205: }
  82,
{ 206: }
  82,
{ 207: }
  82,
{ 208: }
  82,
{ 209: }
  82,
{ 210: }
  82,
{ 211: }
  82,
{ 212: }
  82,
{ 213: }
  82,
{ 214: }
  82,
{ 215: }
  41,
  82,
{ 216: }
  82,
{ 217: }
  82,
{ 218: }
  82,
{ 219: }
  43,
  82,
{ 220: }
  82,
{ 221: }
  82,
{ 222: }
  46,
  82,
{ 223: }
  52,
  82,
{ 224: }
  82,
{ 225: }
  82,
{ 226: }
  82,
{ 227: }
  82,
{ 228: }
  82,
{ 229: }
  82,
{ 230: }
  82,
{ 231: }
  82,
{ 232: }
  82,
{ 233: }
  82,
{ 234: }
  82,
{ 235: }
  82,
{ 236: }
  82,
{ 237: }
  92,
{ 238: }
{ 239: }
  83,
{ 240: }
{ 241: }
{ 242: }
{ 243: }
  88,
{ 244: }
{ 245: }
{ 246: }
  97,
{ 247: }
{ 248: }
{ 249: }
{ 250: }
{ 251: }
{ 252: }
{ 253: }
{ 254: }
{ 255: }
{ 256: }
{ 257: }
{ 258: }
  82,
{ 259: }
  82,
{ 260: }
  75,
  82,
{ 261: }
  31,
  82,
{ 262: }
  82,
{ 263: }
  82,
{ 264: }
  82,
{ 265: }
  82,
{ 266: }
  82,
{ 267: }
  82,
{ 268: }
  33,
  82,
{ 269: }
  37,
  82,
{ 270: }
  82,
{ 271: }
  82,
{ 272: }
  82,
{ 273: }
  36,
  82,
{ 274: }
  82,
{ 275: }
  82,
{ 276: }
  82,
{ 277: }
  82,
{ 278: }
  44,
  82,
{ 279: }
  82,
{ 280: }
  82,
{ 281: }
  82,
{ 282: }
  82,
{ 283: }
  82,
{ 284: }
  48,
  82,
{ 285: }
  81,
  82,
{ 286: }
  45,
  82,
{ 287: }
  82,
{ 288: }
  68,
  82,
{ 289: }
  82,
{ 290: }
  82,
{ 291: }
  82,
{ 292: }
  82,
{ 293: }
  82,
{ 294: }
  82,
{ 295: }
  82,
{ 296: }
  82,
{ 297: }
  82,
{ 298: }
  82,
{ 299: }
  82,
{ 300: }
{ 301: }
{ 302: }
{ 303: }
{ 304: }
{ 305: }
{ 306: }
{ 307: }
{ 308: }
{ 309: }
{ 310: }
{ 311: }
{ 312: }
{ 313: }
{ 314: }
  30,
  82,
{ 315: }
  82,
{ 316: }
  82,
{ 317: }
  60,
  82,
{ 318: }
  82,
{ 319: }
  79,
  82,
{ 320: }
  82,
{ 321: }
  82,
{ 322: }
  82,
{ 323: }
  34,
  82,
{ 324: }
  82,
{ 325: }
  82,
{ 326: }
  82,
{ 327: }
  39,
  82,
{ 328: }
  47,
  82,
{ 329: }
  49,
  82,
{ 330: }
  82,
{ 331: }
  82,
{ 332: }
  82,
{ 333: }
  82,
{ 334: }
  82,
{ 335: }
  74,
  82,
{ 336: }
  82,
{ 337: }
  82,
{ 338: }
  61,
  82,
{ 339: }
  82,
{ 340: }
  64,
  82,
{ 341: }
  82,
{ 342: }
  67,
  82,
{ 343: }
  82,
{ 344: }
  76,
  82,
{ 345: }
  78,
  82,
{ 346: }
{ 347: }
{ 348: }
{ 349: }
{ 350: }
{ 351: }
{ 352: }
{ 353: }
  82,
{ 354: }
  77,
  82,
{ 355: }
  32,
  82,
{ 356: }
  82,
{ 357: }
  82,
{ 358: }
  63,
  82,
{ 359: }
  51,
  82,
{ 360: }
  40,
  82,
{ 361: }
  38,
  82,
{ 362: }
  82,
{ 363: }
  82,
{ 364: }
  82,
{ 365: }
  82,
{ 366: }
  82,
{ 367: }
  82,
{ 368: }
  82,
{ 369: }
  62,
  82,
{ 370: }
  82,
{ 371: }
  82,
{ 372: }
{ 373: }
{ 374: }
{ 375: }
  5,
  6,
{ 376: }
  4,
{ 377: }
  82,
{ 378: }
  82,
{ 379: }
  82,
{ 380: }
  59,
  82,
{ 381: }
  70,
  82,
{ 382: }
  82,
{ 383: }
  42,
  82,
{ 384: }
  82,
{ 385: }
  56,
  82,
{ 386: }
  82,
{ 387: }
  82,
{ 388: }
  71,
  82,
{ 389: }
  4,
  6,
{ 390: }
  55,
  82,
{ 391: }
  82,
{ 392: }
  82,
{ 393: }
  57,
  82,
{ 394: }
  73,
  82,
{ 395: }
  72,
  82,
{ 396: }
  65,
  82,
{ 397: }
  80,
  82,
{ 398: }
  82,
{ 399: }
  58,
  82
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
  ( cc: [ #1..#8,#11,#12,#14..#31,'!','$','?','@','\',
            '`',#127..#255 ]; s: 55),
  ( cc: [ #9,#13,' ' ]; s: 2),
  ( cc: [ #10 ]; s: 3),
  ( cc: [ '"' ]; s: 54),
  ( cc: [ '#' ]; s: 5),
  ( cc: [ '%' ]; s: 21),
  ( cc: [ '&' ]; s: 25),
  ( cc: [ '''' ]; s: 52),
  ( cc: [ '(' ]; s: 10),
  ( cc: [ ')' ]; s: 11),
  ( cc: [ '*' ]; s: 20),
  ( cc: [ '+' ]; s: 18),
  ( cc: [ ',' ]; s: 13),
  ( cc: [ '-' ]; s: 19),
  ( cc: [ '.' ]; s: 50),
  ( cc: [ '/' ]; s: 4),
  ( cc: [ '0' ]; s: 49),
  ( cc: [ '1'..'9' ]; s: 51),
  ( cc: [ ':' ]; s: 12),
  ( cc: [ ';' ]; s: 14),
  ( cc: [ '<' ]; s: 17),
  ( cc: [ '=' ]; s: 15),
  ( cc: [ '>' ]; s: 16),
  ( cc: [ 'A'..'E','G'..'K','M','N','P'..'S','U','W'..'Z',
            '_','g','h','j','k','q','x'..'z' ]; s: 48),
  ( cc: [ 'F' ]; s: 37),
  ( cc: [ 'L' ]; s: 53),
  ( cc: [ 'O' ]; s: 47),
  ( cc: [ 'T' ]; s: 38),
  ( cc: [ 'V' ]; s: 44),
  ( cc: [ '[' ]; s: 8),
  ( cc: [ ']' ]; s: 9),
  ( cc: [ '^' ]; s: 24),
  ( cc: [ 'a' ]; s: 41),
  ( cc: [ 'b' ]; s: 32),
  ( cc: [ 'c' ]; s: 27),
  ( cc: [ 'd' ]; s: 30),
  ( cc: [ 'e' ]; s: 39),
  ( cc: [ 'f' ]; s: 29),
  ( cc: [ 'i' ]; s: 26),
  ( cc: [ 'l' ]; s: 36),
  ( cc: [ 'm' ]; s: 45),
  ( cc: [ 'n' ]; s: 43),
  ( cc: [ 'o' ]; s: 40),
  ( cc: [ 'p' ]; s: 42),
  ( cc: [ 'r' ]; s: 46),
  ( cc: [ 's' ]; s: 33),
  ( cc: [ 't' ]; s: 28),
  ( cc: [ 'u' ]; s: 35),
  ( cc: [ 'v' ]; s: 34),
  ( cc: [ 'w' ]; s: 31),
  ( cc: [ '{' ]; s: 6),
  ( cc: [ '|' ]; s: 23),
  ( cc: [ '}' ]; s: 7),
  ( cc: [ '~' ]; s: 22),
{ 1: }
  ( cc: [ #1..#8,#11,#12,#14..#31,'!','$','?','@','\',
            '`',#127..#255 ]; s: 55),
  ( cc: [ #9,#13,' ' ]; s: 2),
  ( cc: [ #10 ]; s: 3),
  ( cc: [ '"' ]; s: 54),
  ( cc: [ '#' ]; s: 56),
  ( cc: [ '%' ]; s: 21),
  ( cc: [ '&' ]; s: 25),
  ( cc: [ '''' ]; s: 52),
  ( cc: [ '(' ]; s: 10),
  ( cc: [ ')' ]; s: 11),
  ( cc: [ '*' ]; s: 20),
  ( cc: [ '+' ]; s: 18),
  ( cc: [ ',' ]; s: 13),
  ( cc: [ '-' ]; s: 19),
  ( cc: [ '.' ]; s: 50),
  ( cc: [ '/' ]; s: 4),
  ( cc: [ '0' ]; s: 49),
  ( cc: [ '1'..'9' ]; s: 51),
  ( cc: [ ':' ]; s: 12),
  ( cc: [ ';' ]; s: 14),
  ( cc: [ '<' ]; s: 17),
  ( cc: [ '=' ]; s: 15),
  ( cc: [ '>' ]; s: 16),
  ( cc: [ 'A'..'E','G'..'K','M','N','P'..'S','U','W'..'Z',
            '_','g','h','j','k','q','x'..'z' ]; s: 48),
  ( cc: [ 'F' ]; s: 37),
  ( cc: [ 'L' ]; s: 53),
  ( cc: [ 'O' ]; s: 47),
  ( cc: [ 'T' ]; s: 38),
  ( cc: [ 'V' ]; s: 44),
  ( cc: [ '[' ]; s: 8),
  ( cc: [ ']' ]; s: 9),
  ( cc: [ '^' ]; s: 24),
  ( cc: [ 'a' ]; s: 41),
  ( cc: [ 'b' ]; s: 32),
  ( cc: [ 'c' ]; s: 27),
  ( cc: [ 'd' ]; s: 30),
  ( cc: [ 'e' ]; s: 39),
  ( cc: [ 'f' ]; s: 29),
  ( cc: [ 'i' ]; s: 26),
  ( cc: [ 'l' ]; s: 36),
  ( cc: [ 'm' ]; s: 45),
  ( cc: [ 'n' ]; s: 43),
  ( cc: [ 'o' ]; s: 40),
  ( cc: [ 'p' ]; s: 42),
  ( cc: [ 'r' ]; s: 46),
  ( cc: [ 's' ]; s: 33),
  ( cc: [ 't' ]; s: 28),
  ( cc: [ 'u' ]; s: 35),
  ( cc: [ 'v' ]; s: 34),
  ( cc: [ 'w' ]; s: 31),
  ( cc: [ '{' ]; s: 6),
  ( cc: [ '|' ]; s: 23),
  ( cc: [ '}' ]; s: 7),
  ( cc: [ '~' ]; s: 22),
{ 2: }
{ 3: }
{ 4: }
  ( cc: [ '/' ]; s: 57),
{ 5: }
  ( cc: [ 'p' ]; s: 58),
{ 6: }
{ 7: }
{ 8: }
{ 9: }
{ 10: }
{ 11: }
{ 12: }
  ( cc: [ ':' ]; s: 59),
{ 13: }
{ 14: }
{ 15: }
{ 16: }
  ( cc: [ '>' ]; s: 60),
{ 17: }
  ( cc: [ '<' ]; s: 61),
{ 18: }
{ 19: }
{ 20: }
{ 21: }
{ 22: }
{ 23: }
{ 24: }
{ 25: }
{ 26: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'l','o'..'z' ]; s: 64),
  ( cc: [ 'm' ]; s: 62),
  ( cc: [ 'n' ]; s: 63),
{ 27: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'g','i'..'n','p'..'t',
            'v'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 67),
  ( cc: [ 'h' ]; s: 66),
  ( cc: [ 'o' ]; s: 65),
  ( cc: [ 'u' ]; s: 68),
{ 28: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'x','z' ]; s: 64),
  ( cc: [ 'r' ]; s: 70),
  ( cc: [ 'y' ]; s: 69),
{ 29: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'h','j','k','m'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 73),
  ( cc: [ 'i' ]; s: 72),
  ( cc: [ 'l' ]; s: 71),
{ 30: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 75),
  ( cc: [ 'o' ]; s: 74),
{ 31: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'r','t'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 76),
  ( cc: [ 's' ]; s: 77),
{ 32: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 78),
{ 33: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f','g','i'..'s',
            'v','x'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 83),
  ( cc: [ 'h' ]; s: 80),
  ( cc: [ 't' ]; s: 79),
  ( cc: [ 'u' ]; s: 82),
  ( cc: [ 'w' ]; s: 81),
{ 34: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 85),
  ( cc: [ 'o' ]; s: 84),
{ 35: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 86),
{ 36: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 87),
{ 37: }
  ( cc: [ '0'..'9','B'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'A' ]; s: 88),
{ 38: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'R' ]; s: 89),
{ 39: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'w','y','z' ]; s: 64),
  ( cc: [ 'n' ]; s: 90),
  ( cc: [ 'x' ]; s: 91),
{ 40: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'m','o'..'t',
            'v'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 93),
  ( cc: [ 'n' ]; s: 94),
  ( cc: [ 'u' ]; s: 92),
{ 41: }
  ( cc: [ '0'..'9','A'..'Z','_','a','c'..'m','o'..'s',
            'u'..'z' ]; s: 64),
  ( cc: [ 'b' ]; s: 95),
  ( cc: [ 'n' ]; s: 96),
  ( cc: [ 't' ]; s: 97),
{ 42: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s','t','v'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 99),
  ( cc: [ 'u' ]; s: 98),
{ 43: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 100),
{ 44: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 101),
{ 45: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 102),
{ 46: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 104),
  ( cc: [ 'e' ]; s: 103),
{ 47: }
  ( cc: [ '0'..'9','A'..'Z','_','a','c'..'z' ]; s: 64),
  ( cc: [ 'b' ]; s: 105),
{ 48: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 49: }
  ( cc: [ '.' ]; s: 107),
  ( cc: [ '0'..'7' ]; s: 110),
  ( cc: [ '8','9' ]; s: 106),
  ( cc: [ 'D','d' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 108),
  ( cc: [ 'X','x' ]; s: 111),
{ 50: }
  ( cc: [ '0'..'9' ]; s: 112),
{ 51: }
  ( cc: [ '.' ]; s: 107),
  ( cc: [ '0'..'9' ]; s: 113),
  ( cc: [ 'D','d' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 108),
{ 52: }
  ( cc: [ #1..#8,#11..'&','('..'[',']'..#255 ]; s: 114),
  ( cc: [ '\' ]; s: 115),
{ 53: }
  ( cc: [ '"' ]; s: 117),
  ( cc: [ '''' ]; s: 116),
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 54: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 118),
  ( cc: [ '"' ]; s: 120),
  ( cc: [ '\' ]; s: 119),
{ 55: }
{ 56: }
  ( cc: [ #1..#9,#11..'k','m'..'o','q'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'l' ]; s: 122),
  ( cc: [ 'p' ]; s: 121),
{ 57: }
  ( cc: [ #1..#9,#11..#255 ]; s: 57),
{ 58: }
  ( cc: [ 'r' ]; s: 125),
{ 59: }
{ 60: }
{ 61: }
{ 62: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'o','q'..'z' ]; s: 64),
  ( cc: [ 'p' ]; s: 126),
{ 63: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'s','u'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 128),
  ( cc: [ 't' ]; s: 127),
{ 64: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 65: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 129),
{ 66: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 130),
{ 67: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 131),
{ 68: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 132),
{ 69: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'o','q'..'z' ]; s: 64),
  ( cc: [ 'p' ]; s: 133),
{ 70: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 134),
{ 71: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 135),
{ 72: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'w','y','z' ]; s: 64),
  ( cc: [ 'x' ]; s: 136),
{ 73: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 137),
{ 74: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 138),
{ 75: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'e','g'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 139),
{ 76: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'g','i'..'z' ]; s: 64),
  ( cc: [ 'h' ]; s: 140),
{ 77: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 141),
{ 78: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 142),
{ 79: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 143),
{ 80: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 144),
{ 81: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 145),
{ 82: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'o','q'..'z' ]; s: 64),
  ( cc: [ 'p' ]; s: 146),
{ 83: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'p','r'..'z' ]; s: 64),
  ( cc: [ 'q' ]; s: 147),
{ 84: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 148),
{ 85: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 149),
{ 86: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'r','t'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 151),
  ( cc: [ 's' ]; s: 150),
{ 87: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 153),
  ( cc: [ 'n' ]; s: 152),
{ 88: }
  ( cc: [ '0'..'9','A'..'K','M'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'L' ]; s: 154),
{ 89: }
  ( cc: [ '0'..'9','A'..'T','V'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'U' ]; s: 155),
{ 90: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 156),
{ 91: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 157),
{ 92: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 158),
{ 93: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 159),
{ 94: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 160),
{ 95: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 161),
{ 96: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'x','z' ]; s: 64),
  ( cc: [ 'y' ]; s: 162),
{ 97: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 163),
{ 98: }
  ( cc: [ '0'..'9','A'..'Z','_','a','c'..'z' ]; s: 64),
  ( cc: [ 'b' ]; s: 164),
{ 99: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 165),
{ 100: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 166),
{ 101: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 167),
{ 102: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 168),
{ 103: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 169),
{ 104: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 170),
{ 105: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'i','k'..'z' ]; s: 64),
  ( cc: [ 'j' ]; s: 171),
{ 106: }
  ( cc: [ '.' ]; s: 107),
  ( cc: [ '0'..'9' ]; s: 106),
  ( cc: [ 'D','d' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 108),
{ 107: }
  ( cc: [ '0'..'9' ]; s: 172),
  ( cc: [ 'D','d' ]; s: 174),
  ( cc: [ 'E','e' ]; s: 173),
{ 108: }
  ( cc: [ '''' ]; s: 175),
  ( cc: [ '0'..'9' ]; s: 176),
{ 109: }
{ 110: }
  ( cc: [ '.' ]; s: 107),
  ( cc: [ '0'..'7' ]; s: 110),
  ( cc: [ '8','9' ]; s: 106),
  ( cc: [ 'D','d' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 108),
{ 111: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 111),
{ 112: }
  ( cc: [ '0'..'9' ]; s: 112),
  ( cc: [ 'D','d' ]; s: 178),
  ( cc: [ 'E','e' ]; s: 177),
{ 113: }
  ( cc: [ '.' ]; s: 107),
  ( cc: [ '0'..'9' ]; s: 113),
  ( cc: [ 'D','d' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 108),
{ 114: }
  ( cc: [ '''' ]; s: 179),
{ 115: }
  ( cc: [ '"','''','?','\','a','b','f','n','r','t',
            'v' ]; s: 114),
  ( cc: [ '0'..'7' ]; s: 180),
  ( cc: [ 'X','x' ]; s: 181),
{ 116: }
  ( cc: [ #1..#8,#11..'&','('..'[',']'..#255 ]; s: 182),
  ( cc: [ '\' ]; s: 183),
{ 117: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '\' ]; s: 184),
{ 118: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 118),
  ( cc: [ '"' ]; s: 120),
  ( cc: [ '\' ]; s: 119),
{ 119: }
  ( cc: [ '"','''','?','\','a','b','f','n','r','t',
            'v' ]; s: 118),
  ( cc: [ '0'..'7' ]; s: 186),
  ( cc: [ 'X','x' ]; s: 187),
{ 120: }
{ 121: }
  ( cc: [ #1..#9,#11..'q','s'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'r' ]; s: 188),
{ 122: }
  ( cc: [ #1..#9,#11..'h','j'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'i' ]; s: 189),
{ 123: }
  ( cc: [ #1..#9,#11..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
{ 124: }
{ 125: }
  ( cc: [ 'a' ]; s: 190),
{ 126: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 191),
{ 127: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 192),
{ 128: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 193),
{ 129: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','u'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 194),
  ( cc: [ 't' ]; s: 195),
{ 130: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 196),
{ 131: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 197),
{ 132: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 198),
{ 133: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 199),
{ 134: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 200),
{ 135: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 201),
{ 136: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 202),
{ 137: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 203),
{ 138: }
  ( cc: [ '0'..'9','A'..'Z','_','a','c'..'z' ]; s: 64),
  ( cc: [ 'b' ]; s: 204),
{ 139: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 205),
{ 140: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 206),
{ 141: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 207),
{ 142: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 208),
{ 143: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 209),
  ( cc: [ 'u' ]; s: 210),
{ 144: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 211),
{ 145: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 212),
{ 146: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'o','q'..'z' ]; s: 64),
  ( cc: [ 'p' ]; s: 213),
{ 147: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 214),
{ 148: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 215),
{ 149: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 216),
{ 150: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 217),
{ 151: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 218),
{ 152: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 219),
{ 153: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 220),
{ 154: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'S' ]; s: 221),
{ 155: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'E' ]; s: 222),
{ 156: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'l','n'..'z' ]; s: 64),
  ( cc: [ 'm' ]; s: 223),
{ 157: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 224),
{ 158: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 159: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 225),
{ 160: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'v','x'..'z' ]; s: 64),
  ( cc: [ 'w' ]; s: 226),
{ 161: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 227),
{ 162: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 163: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 228),
{ 164: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 229),
{ 165: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'u','w'..'z' ]; s: 64),
  ( cc: [ 'v' ]; s: 230),
{ 166: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 231),
{ 167: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 232),
{ 168: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 233),
{ 169: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 234),
{ 170: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 235),
{ 171: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 236),
{ 172: }
  ( cc: [ '0'..'9' ]; s: 172),
  ( cc: [ 'D','d' ]; s: 237),
  ( cc: [ 'E','e' ]; s: 173),
{ 173: }
  ( cc: [ '''' ]; s: 238),
  ( cc: [ '0'..'9' ]; s: 239),
{ 174: }
{ 175: }
  ( cc: [ '''' ]; s: 240),
  ( cc: [ '-' ]; s: 241),
{ 176: }
  ( cc: [ '0'..'9' ]; s: 176),
{ 177: }
  ( cc: [ '''' ]; s: 242),
  ( cc: [ '0'..'9' ]; s: 243),
{ 178: }
{ 179: }
{ 180: }
  ( cc: [ '''' ]; s: 179),
  ( cc: [ '0'..'7' ]; s: 244),
{ 181: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 245),
{ 182: }
  ( cc: [ '''' ]; s: 246),
{ 183: }
  ( cc: [ '"','''','?','\','a','b','f','n','r','t',
            'v' ]; s: 182),
  ( cc: [ '0'..'7' ]; s: 247),
  ( cc: [ 'U','u' ]; s: 249),
  ( cc: [ 'X','x' ]; s: 248),
{ 184: }
  ( cc: [ '"','''','?','\','a','b','f','n','r','t',
            'v' ]; s: 117),
  ( cc: [ '0'..'7' ]; s: 250),
  ( cc: [ 'U','u' ]; s: 252),
  ( cc: [ 'X','x' ]; s: 251),
{ 185: }
{ 186: }
  ( cc: [ #1..#8,#11..'!','#'..'/','8'..'[',']'..#255 ]; s: 118),
  ( cc: [ '"' ]; s: 120),
  ( cc: [ '0'..'7' ]; s: 253),
  ( cc: [ '\' ]; s: 119),
{ 187: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 254),
{ 188: }
  ( cc: [ #1..#9,#11..'`','b'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'a' ]; s: 255),
{ 189: }
  ( cc: [ #1..#9,#11..'m','o'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'n' ]; s: 256),
{ 190: }
  ( cc: [ 'g' ]; s: 257),
{ 191: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 258),
{ 192: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 259),
{ 193: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 260),
{ 194: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 261),
{ 195: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 262),
{ 196: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 197: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 198: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 263),
{ 199: }
  ( cc: [ '0'..'9','A'..'H','J'..'O','Q'..'Z','_','a'..'c',
            'e'..'z' ]; s: 64),
  ( cc: [ 'I' ]; s: 265),
  ( cc: [ 'P' ]; s: 266),
  ( cc: [ 'd' ]; s: 264),
{ 200: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 267),
{ 201: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 268),
{ 202: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 269),
{ 203: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 270),
{ 204: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 271),
{ 205: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 272),
{ 206: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 273),
{ 207: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 274),
{ 208: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 275),
{ 209: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 276),
{ 210: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 277),
{ 211: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 278),
{ 212: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 279),
{ 213: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 280),
{ 214: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 281),
{ 215: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 216: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 282),
{ 217: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 283),
{ 218: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 284),
{ 219: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 220: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 285),
{ 221: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'E' ]; s: 286),
{ 222: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 223: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 224: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'o','q'..'z' ]; s: 64),
  ( cc: [ 'p' ]; s: 287),
{ 225: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 288),
{ 226: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 289),
{ 227: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 290),
{ 228: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 291),
{ 229: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 292),
{ 230: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 293),
{ 231: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'u','w'..'z' ]; s: 64),
  ( cc: [ 'v' ]; s: 294),
{ 232: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 295),
{ 233: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 296),
{ 234: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 297),
{ 235: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 298),
{ 236: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 299),
{ 237: }
{ 238: }
  ( cc: [ '''' ]; s: 300),
  ( cc: [ '-' ]; s: 301),
{ 239: }
  ( cc: [ '0'..'9' ]; s: 239),
{ 240: }
  ( cc: [ '''' ]; s: 240),
  ( cc: [ '0'..'9' ]; s: 176),
{ 241: }
  ( cc: [ '''' ]; s: 302),
{ 242: }
  ( cc: [ '''' ]; s: 303),
  ( cc: [ '-' ]; s: 304),
{ 243: }
  ( cc: [ '0'..'9' ]; s: 243),
{ 244: }
  ( cc: [ '''' ]; s: 179),
  ( cc: [ '0'..'7' ]; s: 114),
{ 245: }
  ( cc: [ '''' ]; s: 179),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 114),
{ 246: }
{ 247: }
  ( cc: [ '''' ]; s: 246),
  ( cc: [ '0'..'7' ]; s: 305),
{ 248: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 306),
{ 249: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 307),
{ 250: }
  ( cc: [ #1..#8,#11..'!','#'..'/','8'..'[',']'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '0'..'7' ]; s: 308),
  ( cc: [ '\' ]; s: 184),
{ 251: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 309),
{ 252: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 310),
{ 253: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 118),
  ( cc: [ '"' ]; s: 120),
  ( cc: [ '\' ]; s: 119),
{ 254: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 118),
  ( cc: [ '"' ]; s: 120),
  ( cc: [ '\' ]; s: 119),
{ 255: }
  ( cc: [ #1..#9,#11..'f','h'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'g' ]; s: 311),
{ 256: }
  ( cc: [ #1..#9,#11..'d','f'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'e' ]; s: 312),
{ 257: }
  ( cc: [ 'm' ]; s: 313),
{ 258: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 314),
{ 259: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'e','g'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 315),
{ 260: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 261: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 262: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'w','y','z' ]; s: 64),
  ( cc: [ 'x' ]; s: 316),
{ 263: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'l','n'..'z' ]; s: 64),
  ( cc: [ 'm' ]; s: 317),
{ 264: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 318),
{ 265: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 319),
{ 266: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 320),
{ 267: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 321),
{ 268: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 269: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 270: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 322),
{ 271: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 323),
{ 272: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 324),
{ 273: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 274: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 325),
{ 275: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 326),
{ 276: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 327),
{ 277: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 328),
{ 278: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 279: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'g','i'..'z' ]; s: 64),
  ( cc: [ 'h' ]; s: 329),
{ 280: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 330),
{ 281: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 331),
{ 282: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 332),
{ 283: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 333),
{ 284: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 285: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 286: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 287: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 334),
{ 288: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 289: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'x','z' ]; s: 64),
  ( cc: [ 'y' ]; s: 335),
{ 290: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 336),
{ 291: }
  ( cc: [ '0'..'9','A'..'Z','_','a','c'..'z' ]; s: 64),
  ( cc: [ 'b' ]; s: 337),
{ 292: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 338),
{ 293: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 339),
{ 294: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 340),
{ 295: }
  ( cc: [ '0'..'9','A','C'..'Z','_','a'..'z' ]; s: 64),
  ( cc: [ 'B' ]; s: 341),
{ 296: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 342),
{ 297: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 343),
{ 298: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 344),
{ 299: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 345),
{ 300: }
  ( cc: [ '''' ]; s: 300),
  ( cc: [ '0'..'9' ]; s: 239),
{ 301: }
  ( cc: [ '''' ]; s: 346),
{ 302: }
  ( cc: [ '0'..'9' ]; s: 176),
{ 303: }
  ( cc: [ '''' ]; s: 303),
  ( cc: [ '0'..'9' ]; s: 243),
{ 304: }
  ( cc: [ '''' ]; s: 347),
{ 305: }
  ( cc: [ '''' ]; s: 246),
  ( cc: [ '0'..'7' ]; s: 182),
{ 306: }
  ( cc: [ '''' ]; s: 246),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 182),
{ 307: }
  ( cc: [ '''' ]; s: 246),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 348),
{ 308: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '\' ]; s: 184),
{ 309: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '\' ]; s: 184),
{ 310: }
  ( cc: [ #1..#8,#11..'!','#'..'/',':'..'@','G'..'[',
            ']'..'`','g'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 349),
  ( cc: [ '\' ]; s: 184),
{ 311: }
  ( cc: [ #1..#9,#11..'l','n'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'm' ]; s: 350),
{ 312: }
  ( cc: [ #1..#9,#11..#31,'!'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ ' ' ]; s: 351),
{ 313: }
  ( cc: [ 'a' ]; s: 352),
{ 314: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 315: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 353),
{ 316: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 354),
{ 317: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 318: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'e','g'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 355),
{ 319: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 320: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 356),
{ 321: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 357),
{ 322: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'x','z' ]; s: 64),
  ( cc: [ 'y' ]; s: 358),
{ 323: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 324: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 359),
{ 325: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 360),
{ 326: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 361),
{ 327: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 328: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 329: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 330: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 362),
{ 331: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 363),
{ 332: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'x','z' ]; s: 64),
  ( cc: [ 'y' ]; s: 364),
{ 333: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 365),
{ 334: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 366),
{ 335: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 336: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 367),
{ 337: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 368),
{ 338: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 339: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 369),
{ 340: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 341: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 370),
{ 342: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 343: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 371),
{ 344: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 345: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 346: }
  ( cc: [ '0'..'9' ]; s: 239),
{ 347: }
  ( cc: [ '0'..'9' ]; s: 243),
{ 348: }
  ( cc: [ '''' ]; s: 246),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 372),
{ 349: }
  ( cc: [ #1..#8,#11..'!','#'..'/',':'..'@','G'..'[',
            ']'..'`','g'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 373),
  ( cc: [ '\' ]; s: 184),
{ 350: }
  ( cc: [ #1..#9,#11..'`','b'..#255 ]; s: 123),
  ( cc: [ #10 ]; s: 124),
  ( cc: [ 'a' ]; s: 374),
{ 351: }
  ( cc: [ #1..#9,#11..#255 ]; s: 351),
  ( cc: [ #10 ]; s: 375),
{ 352: }
  ( cc: [ #1..#9,#11..#255 ]; s: 352),
  ( cc: [ #10 ]; s: 376),
{ 353: }
  ( cc: [ '0'..'9','A'..'Z','_','a','b','d'..'z' ]; s: 64),
  ( cc: [ 'c' ]; s: 377),
{ 354: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 355: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 356: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'e','g'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 378),
{ 357: }
  ( cc: [ '0'..'9','A'..'Z','_','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 379),
{ 358: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 359: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 360: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 361: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 362: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 380),
{ 363: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 381),
{ 364: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'o','q'..'z' ]; s: 64),
  ( cc: [ 'p' ]; s: 382),
{ 365: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 383),
{ 366: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 384),
{ 367: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 385),
{ 368: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 386),
{ 369: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 370: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 387),
{ 371: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'x','z' ]; s: 64),
  ( cc: [ 'y' ]; s: 388),
{ 372: }
  ( cc: [ '''' ]; s: 246),
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 182),
{ 373: }
  ( cc: [ #1..#8,#11..'!','#'..'[',']'..#255 ]; s: 117),
  ( cc: [ '"' ]; s: 185),
  ( cc: [ '\' ]; s: 184),
{ 374: }
  ( cc: [ #1..#9,#11..#255 ]; s: 374),
  ( cc: [ #10 ]; s: 389),
{ 375: }
{ 376: }
{ 377: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 390),
{ 378: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 391),
{ 379: }
  ( cc: [ '0'..'9','A'..'Z','_','a','c'..'z' ]; s: 64),
  ( cc: [ 'b' ]; s: 392),
{ 380: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 381: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 382: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 393),
{ 383: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 384: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 394),
{ 385: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 386: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 395),
{ 387: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 396),
{ 388: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 389: }
{ 390: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 391: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'w','y','z' ]; s: 64),
  ( cc: [ 'x' ]; s: 397),
{ 392: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 398),
{ 393: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 394: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 395: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 396: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 397: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64),
{ 398: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 399),
{ 399: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 64)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 3,
{ 4: } 4,
{ 5: } 6,
{ 6: } 7,
{ 7: } 9,
{ 8: } 11,
{ 9: } 13,
{ 10: } 15,
{ 11: } 17,
{ 12: } 19,
{ 13: } 21,
{ 14: } 23,
{ 15: } 25,
{ 16: } 27,
{ 17: } 29,
{ 18: } 31,
{ 19: } 33,
{ 20: } 35,
{ 21: } 37,
{ 22: } 39,
{ 23: } 41,
{ 24: } 43,
{ 25: } 45,
{ 26: } 47,
{ 27: } 49,
{ 28: } 51,
{ 29: } 53,
{ 30: } 55,
{ 31: } 57,
{ 32: } 59,
{ 33: } 61,
{ 34: } 63,
{ 35: } 65,
{ 36: } 67,
{ 37: } 69,
{ 38: } 71,
{ 39: } 73,
{ 40: } 75,
{ 41: } 77,
{ 42: } 79,
{ 43: } 81,
{ 44: } 83,
{ 45: } 85,
{ 46: } 87,
{ 47: } 89,
{ 48: } 91,
{ 49: } 93,
{ 50: } 95,
{ 51: } 96,
{ 52: } 98,
{ 53: } 99,
{ 54: } 101,
{ 55: } 102,
{ 56: } 103,
{ 57: } 104,
{ 58: } 105,
{ 59: } 105,
{ 60: } 106,
{ 61: } 107,
{ 62: } 108,
{ 63: } 109,
{ 64: } 111,
{ 65: } 112,
{ 66: } 113,
{ 67: } 114,
{ 68: } 115,
{ 69: } 116,
{ 70: } 117,
{ 71: } 118,
{ 72: } 119,
{ 73: } 120,
{ 74: } 121,
{ 75: } 122,
{ 76: } 123,
{ 77: } 124,
{ 78: } 125,
{ 79: } 126,
{ 80: } 127,
{ 81: } 128,
{ 82: } 129,
{ 83: } 130,
{ 84: } 131,
{ 85: } 132,
{ 86: } 133,
{ 87: } 134,
{ 88: } 135,
{ 89: } 136,
{ 90: } 137,
{ 91: } 138,
{ 92: } 139,
{ 93: } 140,
{ 94: } 141,
{ 95: } 142,
{ 96: } 143,
{ 97: } 144,
{ 98: } 145,
{ 99: } 146,
{ 100: } 147,
{ 101: } 148,
{ 102: } 149,
{ 103: } 150,
{ 104: } 151,
{ 105: } 152,
{ 106: } 153,
{ 107: } 153,
{ 108: } 154,
{ 109: } 154,
{ 110: } 155,
{ 111: } 156,
{ 112: } 157,
{ 113: } 158,
{ 114: } 159,
{ 115: } 159,
{ 116: } 159,
{ 117: } 159,
{ 118: } 159,
{ 119: } 159,
{ 120: } 159,
{ 121: } 160,
{ 122: } 160,
{ 123: } 160,
{ 124: } 160,
{ 125: } 161,
{ 126: } 161,
{ 127: } 162,
{ 128: } 163,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 169,
{ 135: } 170,
{ 136: } 171,
{ 137: } 172,
{ 138: } 173,
{ 139: } 174,
{ 140: } 175,
{ 141: } 176,
{ 142: } 177,
{ 143: } 178,
{ 144: } 179,
{ 145: } 180,
{ 146: } 181,
{ 147: } 182,
{ 148: } 183,
{ 149: } 184,
{ 150: } 185,
{ 151: } 186,
{ 152: } 187,
{ 153: } 188,
{ 154: } 189,
{ 155: } 190,
{ 156: } 191,
{ 157: } 192,
{ 158: } 193,
{ 159: } 195,
{ 160: } 196,
{ 161: } 197,
{ 162: } 198,
{ 163: } 200,
{ 164: } 201,
{ 165: } 202,
{ 166: } 203,
{ 167: } 204,
{ 168: } 205,
{ 169: } 206,
{ 170: } 207,
{ 171: } 208,
{ 172: } 209,
{ 173: } 210,
{ 174: } 210,
{ 175: } 211,
{ 176: } 211,
{ 177: } 212,
{ 178: } 212,
{ 179: } 213,
{ 180: } 214,
{ 181: } 214,
{ 182: } 214,
{ 183: } 214,
{ 184: } 214,
{ 185: } 214,
{ 186: } 215,
{ 187: } 215,
{ 188: } 215,
{ 189: } 215,
{ 190: } 215,
{ 191: } 215,
{ 192: } 216,
{ 193: } 217,
{ 194: } 218,
{ 195: } 219,
{ 196: } 220,
{ 197: } 222,
{ 198: } 224,
{ 199: } 225,
{ 200: } 226,
{ 201: } 227,
{ 202: } 228,
{ 203: } 229,
{ 204: } 230,
{ 205: } 231,
{ 206: } 232,
{ 207: } 233,
{ 208: } 234,
{ 209: } 235,
{ 210: } 236,
{ 211: } 237,
{ 212: } 238,
{ 213: } 239,
{ 214: } 240,
{ 215: } 241,
{ 216: } 243,
{ 217: } 244,
{ 218: } 245,
{ 219: } 246,
{ 220: } 248,
{ 221: } 249,
{ 222: } 250,
{ 223: } 252,
{ 224: } 254,
{ 225: } 255,
{ 226: } 256,
{ 227: } 257,
{ 228: } 258,
{ 229: } 259,
{ 230: } 260,
{ 231: } 261,
{ 232: } 262,
{ 233: } 263,
{ 234: } 264,
{ 235: } 265,
{ 236: } 266,
{ 237: } 267,
{ 238: } 268,
{ 239: } 268,
{ 240: } 269,
{ 241: } 269,
{ 242: } 269,
{ 243: } 269,
{ 244: } 270,
{ 245: } 270,
{ 246: } 270,
{ 247: } 271,
{ 248: } 271,
{ 249: } 271,
{ 250: } 271,
{ 251: } 271,
{ 252: } 271,
{ 253: } 271,
{ 254: } 271,
{ 255: } 271,
{ 256: } 271,
{ 257: } 271,
{ 258: } 271,
{ 259: } 272,
{ 260: } 273,
{ 261: } 275,
{ 262: } 277,
{ 263: } 278,
{ 264: } 279,
{ 265: } 280,
{ 266: } 281,
{ 267: } 282,
{ 268: } 283,
{ 269: } 285,
{ 270: } 287,
{ 271: } 288,
{ 272: } 289,
{ 273: } 290,
{ 274: } 292,
{ 275: } 293,
{ 276: } 294,
{ 277: } 295,
{ 278: } 296,
{ 279: } 298,
{ 280: } 299,
{ 281: } 300,
{ 282: } 301,
{ 283: } 302,
{ 284: } 303,
{ 285: } 305,
{ 286: } 307,
{ 287: } 309,
{ 288: } 310,
{ 289: } 312,
{ 290: } 313,
{ 291: } 314,
{ 292: } 315,
{ 293: } 316,
{ 294: } 317,
{ 295: } 318,
{ 296: } 319,
{ 297: } 320,
{ 298: } 321,
{ 299: } 322,
{ 300: } 323,
{ 301: } 323,
{ 302: } 323,
{ 303: } 323,
{ 304: } 323,
{ 305: } 323,
{ 306: } 323,
{ 307: } 323,
{ 308: } 323,
{ 309: } 323,
{ 310: } 323,
{ 311: } 323,
{ 312: } 323,
{ 313: } 323,
{ 314: } 323,
{ 315: } 325,
{ 316: } 326,
{ 317: } 327,
{ 318: } 329,
{ 319: } 330,
{ 320: } 332,
{ 321: } 333,
{ 322: } 334,
{ 323: } 335,
{ 324: } 337,
{ 325: } 338,
{ 326: } 339,
{ 327: } 340,
{ 328: } 342,
{ 329: } 344,
{ 330: } 346,
{ 331: } 347,
{ 332: } 348,
{ 333: } 349,
{ 334: } 350,
{ 335: } 351,
{ 336: } 353,
{ 337: } 354,
{ 338: } 355,
{ 339: } 357,
{ 340: } 358,
{ 341: } 360,
{ 342: } 361,
{ 343: } 363,
{ 344: } 364,
{ 345: } 366,
{ 346: } 368,
{ 347: } 368,
{ 348: } 368,
{ 349: } 368,
{ 350: } 368,
{ 351: } 368,
{ 352: } 368,
{ 353: } 368,
{ 354: } 369,
{ 355: } 371,
{ 356: } 373,
{ 357: } 374,
{ 358: } 375,
{ 359: } 377,
{ 360: } 379,
{ 361: } 381,
{ 362: } 383,
{ 363: } 384,
{ 364: } 385,
{ 365: } 386,
{ 366: } 387,
{ 367: } 388,
{ 368: } 389,
{ 369: } 390,
{ 370: } 392,
{ 371: } 393,
{ 372: } 394,
{ 373: } 394,
{ 374: } 394,
{ 375: } 394,
{ 376: } 396,
{ 377: } 397,
{ 378: } 398,
{ 379: } 399,
{ 380: } 400,
{ 381: } 402,
{ 382: } 404,
{ 383: } 405,
{ 384: } 407,
{ 385: } 408,
{ 386: } 410,
{ 387: } 411,
{ 388: } 412,
{ 389: } 414,
{ 390: } 416,
{ 391: } 418,
{ 392: } 419,
{ 393: } 420,
{ 394: } 422,
{ 395: } 424,
{ 396: } 426,
{ 397: } 428,
{ 398: } 430,
{ 399: } 431
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 2,
{ 3: } 3,
{ 4: } 5,
{ 5: } 6,
{ 6: } 8,
{ 7: } 10,
{ 8: } 12,
{ 9: } 14,
{ 10: } 16,
{ 11: } 18,
{ 12: } 20,
{ 13: } 22,
{ 14: } 24,
{ 15: } 26,
{ 16: } 28,
{ 17: } 30,
{ 18: } 32,
{ 19: } 34,
{ 20: } 36,
{ 21: } 38,
{ 22: } 40,
{ 23: } 42,
{ 24: } 44,
{ 25: } 46,
{ 26: } 48,
{ 27: } 50,
{ 28: } 52,
{ 29: } 54,
{ 30: } 56,
{ 31: } 58,
{ 32: } 60,
{ 33: } 62,
{ 34: } 64,
{ 35: } 66,
{ 36: } 68,
{ 37: } 70,
{ 38: } 72,
{ 39: } 74,
{ 40: } 76,
{ 41: } 78,
{ 42: } 80,
{ 43: } 82,
{ 44: } 84,
{ 45: } 86,
{ 46: } 88,
{ 47: } 90,
{ 48: } 92,
{ 49: } 94,
{ 50: } 95,
{ 51: } 97,
{ 52: } 98,
{ 53: } 100,
{ 54: } 101,
{ 55: } 102,
{ 56: } 103,
{ 57: } 104,
{ 58: } 104,
{ 59: } 105,
{ 60: } 106,
{ 61: } 107,
{ 62: } 108,
{ 63: } 110,
{ 64: } 111,
{ 65: } 112,
{ 66: } 113,
{ 67: } 114,
{ 68: } 115,
{ 69: } 116,
{ 70: } 117,
{ 71: } 118,
{ 72: } 119,
{ 73: } 120,
{ 74: } 121,
{ 75: } 122,
{ 76: } 123,
{ 77: } 124,
{ 78: } 125,
{ 79: } 126,
{ 80: } 127,
{ 81: } 128,
{ 82: } 129,
{ 83: } 130,
{ 84: } 131,
{ 85: } 132,
{ 86: } 133,
{ 87: } 134,
{ 88: } 135,
{ 89: } 136,
{ 90: } 137,
{ 91: } 138,
{ 92: } 139,
{ 93: } 140,
{ 94: } 141,
{ 95: } 142,
{ 96: } 143,
{ 97: } 144,
{ 98: } 145,
{ 99: } 146,
{ 100: } 147,
{ 101: } 148,
{ 102: } 149,
{ 103: } 150,
{ 104: } 151,
{ 105: } 152,
{ 106: } 152,
{ 107: } 153,
{ 108: } 153,
{ 109: } 154,
{ 110: } 155,
{ 111: } 156,
{ 112: } 157,
{ 113: } 158,
{ 114: } 158,
{ 115: } 158,
{ 116: } 158,
{ 117: } 158,
{ 118: } 158,
{ 119: } 158,
{ 120: } 159,
{ 121: } 159,
{ 122: } 159,
{ 123: } 159,
{ 124: } 160,
{ 125: } 160,
{ 126: } 161,
{ 127: } 162,
{ 128: } 163,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 169,
{ 135: } 170,
{ 136: } 171,
{ 137: } 172,
{ 138: } 173,
{ 139: } 174,
{ 140: } 175,
{ 141: } 176,
{ 142: } 177,
{ 143: } 178,
{ 144: } 179,
{ 145: } 180,
{ 146: } 181,
{ 147: } 182,
{ 148: } 183,
{ 149: } 184,
{ 150: } 185,
{ 151: } 186,
{ 152: } 187,
{ 153: } 188,
{ 154: } 189,
{ 155: } 190,
{ 156: } 191,
{ 157: } 192,
{ 158: } 194,
{ 159: } 195,
{ 160: } 196,
{ 161: } 197,
{ 162: } 199,
{ 163: } 200,
{ 164: } 201,
{ 165: } 202,
{ 166: } 203,
{ 167: } 204,
{ 168: } 205,
{ 169: } 206,
{ 170: } 207,
{ 171: } 208,
{ 172: } 209,
{ 173: } 209,
{ 174: } 210,
{ 175: } 210,
{ 176: } 211,
{ 177: } 211,
{ 178: } 212,
{ 179: } 213,
{ 180: } 213,
{ 181: } 213,
{ 182: } 213,
{ 183: } 213,
{ 184: } 213,
{ 185: } 214,
{ 186: } 214,
{ 187: } 214,
{ 188: } 214,
{ 189: } 214,
{ 190: } 214,
{ 191: } 215,
{ 192: } 216,
{ 193: } 217,
{ 194: } 218,
{ 195: } 219,
{ 196: } 221,
{ 197: } 223,
{ 198: } 224,
{ 199: } 225,
{ 200: } 226,
{ 201: } 227,
{ 202: } 228,
{ 203: } 229,
{ 204: } 230,
{ 205: } 231,
{ 206: } 232,
{ 207: } 233,
{ 208: } 234,
{ 209: } 235,
{ 210: } 236,
{ 211: } 237,
{ 212: } 238,
{ 213: } 239,
{ 214: } 240,
{ 215: } 242,
{ 216: } 243,
{ 217: } 244,
{ 218: } 245,
{ 219: } 247,
{ 220: } 248,
{ 221: } 249,
{ 222: } 251,
{ 223: } 253,
{ 224: } 254,
{ 225: } 255,
{ 226: } 256,
{ 227: } 257,
{ 228: } 258,
{ 229: } 259,
{ 230: } 260,
{ 231: } 261,
{ 232: } 262,
{ 233: } 263,
{ 234: } 264,
{ 235: } 265,
{ 236: } 266,
{ 237: } 267,
{ 238: } 267,
{ 239: } 268,
{ 240: } 268,
{ 241: } 268,
{ 242: } 268,
{ 243: } 269,
{ 244: } 269,
{ 245: } 269,
{ 246: } 270,
{ 247: } 270,
{ 248: } 270,
{ 249: } 270,
{ 250: } 270,
{ 251: } 270,
{ 252: } 270,
{ 253: } 270,
{ 254: } 270,
{ 255: } 270,
{ 256: } 270,
{ 257: } 270,
{ 258: } 271,
{ 259: } 272,
{ 260: } 274,
{ 261: } 276,
{ 262: } 277,
{ 263: } 278,
{ 264: } 279,
{ 265: } 280,
{ 266: } 281,
{ 267: } 282,
{ 268: } 284,
{ 269: } 286,
{ 270: } 287,
{ 271: } 288,
{ 272: } 289,
{ 273: } 291,
{ 274: } 292,
{ 275: } 293,
{ 276: } 294,
{ 277: } 295,
{ 278: } 297,
{ 279: } 298,
{ 280: } 299,
{ 281: } 300,
{ 282: } 301,
{ 283: } 302,
{ 284: } 304,
{ 285: } 306,
{ 286: } 308,
{ 287: } 309,
{ 288: } 311,
{ 289: } 312,
{ 290: } 313,
{ 291: } 314,
{ 292: } 315,
{ 293: } 316,
{ 294: } 317,
{ 295: } 318,
{ 296: } 319,
{ 297: } 320,
{ 298: } 321,
{ 299: } 322,
{ 300: } 322,
{ 301: } 322,
{ 302: } 322,
{ 303: } 322,
{ 304: } 322,
{ 305: } 322,
{ 306: } 322,
{ 307: } 322,
{ 308: } 322,
{ 309: } 322,
{ 310: } 322,
{ 311: } 322,
{ 312: } 322,
{ 313: } 322,
{ 314: } 324,
{ 315: } 325,
{ 316: } 326,
{ 317: } 328,
{ 318: } 329,
{ 319: } 331,
{ 320: } 332,
{ 321: } 333,
{ 322: } 334,
{ 323: } 336,
{ 324: } 337,
{ 325: } 338,
{ 326: } 339,
{ 327: } 341,
{ 328: } 343,
{ 329: } 345,
{ 330: } 346,
{ 331: } 347,
{ 332: } 348,
{ 333: } 349,
{ 334: } 350,
{ 335: } 352,
{ 336: } 353,
{ 337: } 354,
{ 338: } 356,
{ 339: } 357,
{ 340: } 359,
{ 341: } 360,
{ 342: } 362,
{ 343: } 363,
{ 344: } 365,
{ 345: } 367,
{ 346: } 367,
{ 347: } 367,
{ 348: } 367,
{ 349: } 367,
{ 350: } 367,
{ 351: } 367,
{ 352: } 367,
{ 353: } 368,
{ 354: } 370,
{ 355: } 372,
{ 356: } 373,
{ 357: } 374,
{ 358: } 376,
{ 359: } 378,
{ 360: } 380,
{ 361: } 382,
{ 362: } 383,
{ 363: } 384,
{ 364: } 385,
{ 365: } 386,
{ 366: } 387,
{ 367: } 388,
{ 368: } 389,
{ 369: } 391,
{ 370: } 392,
{ 371: } 393,
{ 372: } 393,
{ 373: } 393,
{ 374: } 393,
{ 375: } 395,
{ 376: } 396,
{ 377: } 397,
{ 378: } 398,
{ 379: } 399,
{ 380: } 401,
{ 381: } 403,
{ 382: } 404,
{ 383: } 406,
{ 384: } 407,
{ 385: } 409,
{ 386: } 410,
{ 387: } 411,
{ 388: } 413,
{ 389: } 415,
{ 390: } 417,
{ 391: } 418,
{ 392: } 419,
{ 393: } 421,
{ 394: } 423,
{ 395: } 425,
{ 396: } 427,
{ 397: } 429,
{ 398: } 430,
{ 399: } 432
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 3,
{ 4: } 4,
{ 5: } 6,
{ 6: } 7,
{ 7: } 9,
{ 8: } 11,
{ 9: } 13,
{ 10: } 15,
{ 11: } 17,
{ 12: } 19,
{ 13: } 21,
{ 14: } 23,
{ 15: } 25,
{ 16: } 27,
{ 17: } 29,
{ 18: } 31,
{ 19: } 33,
{ 20: } 35,
{ 21: } 37,
{ 22: } 39,
{ 23: } 41,
{ 24: } 43,
{ 25: } 45,
{ 26: } 47,
{ 27: } 49,
{ 28: } 51,
{ 29: } 53,
{ 30: } 55,
{ 31: } 57,
{ 32: } 59,
{ 33: } 61,
{ 34: } 63,
{ 35: } 65,
{ 36: } 67,
{ 37: } 69,
{ 38: } 71,
{ 39: } 73,
{ 40: } 75,
{ 41: } 77,
{ 42: } 79,
{ 43: } 81,
{ 44: } 83,
{ 45: } 85,
{ 46: } 87,
{ 47: } 89,
{ 48: } 91,
{ 49: } 93,
{ 50: } 95,
{ 51: } 96,
{ 52: } 98,
{ 53: } 99,
{ 54: } 101,
{ 55: } 102,
{ 56: } 103,
{ 57: } 104,
{ 58: } 105,
{ 59: } 105,
{ 60: } 106,
{ 61: } 107,
{ 62: } 108,
{ 63: } 109,
{ 64: } 111,
{ 65: } 112,
{ 66: } 113,
{ 67: } 114,
{ 68: } 115,
{ 69: } 116,
{ 70: } 117,
{ 71: } 118,
{ 72: } 119,
{ 73: } 120,
{ 74: } 121,
{ 75: } 122,
{ 76: } 123,
{ 77: } 124,
{ 78: } 125,
{ 79: } 126,
{ 80: } 127,
{ 81: } 128,
{ 82: } 129,
{ 83: } 130,
{ 84: } 131,
{ 85: } 132,
{ 86: } 133,
{ 87: } 134,
{ 88: } 135,
{ 89: } 136,
{ 90: } 137,
{ 91: } 138,
{ 92: } 139,
{ 93: } 140,
{ 94: } 141,
{ 95: } 142,
{ 96: } 143,
{ 97: } 144,
{ 98: } 145,
{ 99: } 146,
{ 100: } 147,
{ 101: } 148,
{ 102: } 149,
{ 103: } 150,
{ 104: } 151,
{ 105: } 152,
{ 106: } 153,
{ 107: } 153,
{ 108: } 154,
{ 109: } 154,
{ 110: } 155,
{ 111: } 156,
{ 112: } 157,
{ 113: } 158,
{ 114: } 159,
{ 115: } 159,
{ 116: } 159,
{ 117: } 159,
{ 118: } 159,
{ 119: } 159,
{ 120: } 159,
{ 121: } 160,
{ 122: } 160,
{ 123: } 160,
{ 124: } 160,
{ 125: } 161,
{ 126: } 161,
{ 127: } 162,
{ 128: } 163,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 169,
{ 135: } 170,
{ 136: } 171,
{ 137: } 172,
{ 138: } 173,
{ 139: } 174,
{ 140: } 175,
{ 141: } 176,
{ 142: } 177,
{ 143: } 178,
{ 144: } 179,
{ 145: } 180,
{ 146: } 181,
{ 147: } 182,
{ 148: } 183,
{ 149: } 184,
{ 150: } 185,
{ 151: } 186,
{ 152: } 187,
{ 153: } 188,
{ 154: } 189,
{ 155: } 190,
{ 156: } 191,
{ 157: } 192,
{ 158: } 193,
{ 159: } 195,
{ 160: } 196,
{ 161: } 197,
{ 162: } 198,
{ 163: } 200,
{ 164: } 201,
{ 165: } 202,
{ 166: } 203,
{ 167: } 204,
{ 168: } 205,
{ 169: } 206,
{ 170: } 207,
{ 171: } 208,
{ 172: } 209,
{ 173: } 210,
{ 174: } 210,
{ 175: } 211,
{ 176: } 211,
{ 177: } 212,
{ 178: } 212,
{ 179: } 213,
{ 180: } 214,
{ 181: } 214,
{ 182: } 214,
{ 183: } 214,
{ 184: } 214,
{ 185: } 214,
{ 186: } 215,
{ 187: } 215,
{ 188: } 215,
{ 189: } 215,
{ 190: } 215,
{ 191: } 215,
{ 192: } 216,
{ 193: } 217,
{ 194: } 218,
{ 195: } 219,
{ 196: } 220,
{ 197: } 222,
{ 198: } 224,
{ 199: } 225,
{ 200: } 226,
{ 201: } 227,
{ 202: } 228,
{ 203: } 229,
{ 204: } 230,
{ 205: } 231,
{ 206: } 232,
{ 207: } 233,
{ 208: } 234,
{ 209: } 235,
{ 210: } 236,
{ 211: } 237,
{ 212: } 238,
{ 213: } 239,
{ 214: } 240,
{ 215: } 241,
{ 216: } 243,
{ 217: } 244,
{ 218: } 245,
{ 219: } 246,
{ 220: } 248,
{ 221: } 249,
{ 222: } 250,
{ 223: } 252,
{ 224: } 254,
{ 225: } 255,
{ 226: } 256,
{ 227: } 257,
{ 228: } 258,
{ 229: } 259,
{ 230: } 260,
{ 231: } 261,
{ 232: } 262,
{ 233: } 263,
{ 234: } 264,
{ 235: } 265,
{ 236: } 266,
{ 237: } 267,
{ 238: } 268,
{ 239: } 268,
{ 240: } 269,
{ 241: } 269,
{ 242: } 269,
{ 243: } 269,
{ 244: } 270,
{ 245: } 270,
{ 246: } 270,
{ 247: } 271,
{ 248: } 271,
{ 249: } 271,
{ 250: } 271,
{ 251: } 271,
{ 252: } 271,
{ 253: } 271,
{ 254: } 271,
{ 255: } 271,
{ 256: } 271,
{ 257: } 271,
{ 258: } 271,
{ 259: } 272,
{ 260: } 273,
{ 261: } 275,
{ 262: } 277,
{ 263: } 278,
{ 264: } 279,
{ 265: } 280,
{ 266: } 281,
{ 267: } 282,
{ 268: } 283,
{ 269: } 285,
{ 270: } 287,
{ 271: } 288,
{ 272: } 289,
{ 273: } 290,
{ 274: } 292,
{ 275: } 293,
{ 276: } 294,
{ 277: } 295,
{ 278: } 296,
{ 279: } 298,
{ 280: } 299,
{ 281: } 300,
{ 282: } 301,
{ 283: } 302,
{ 284: } 303,
{ 285: } 305,
{ 286: } 307,
{ 287: } 309,
{ 288: } 310,
{ 289: } 312,
{ 290: } 313,
{ 291: } 314,
{ 292: } 315,
{ 293: } 316,
{ 294: } 317,
{ 295: } 318,
{ 296: } 319,
{ 297: } 320,
{ 298: } 321,
{ 299: } 322,
{ 300: } 323,
{ 301: } 323,
{ 302: } 323,
{ 303: } 323,
{ 304: } 323,
{ 305: } 323,
{ 306: } 323,
{ 307: } 323,
{ 308: } 323,
{ 309: } 323,
{ 310: } 323,
{ 311: } 323,
{ 312: } 323,
{ 313: } 323,
{ 314: } 323,
{ 315: } 325,
{ 316: } 326,
{ 317: } 327,
{ 318: } 329,
{ 319: } 330,
{ 320: } 332,
{ 321: } 333,
{ 322: } 334,
{ 323: } 335,
{ 324: } 337,
{ 325: } 338,
{ 326: } 339,
{ 327: } 340,
{ 328: } 342,
{ 329: } 344,
{ 330: } 346,
{ 331: } 347,
{ 332: } 348,
{ 333: } 349,
{ 334: } 350,
{ 335: } 351,
{ 336: } 353,
{ 337: } 354,
{ 338: } 355,
{ 339: } 357,
{ 340: } 358,
{ 341: } 360,
{ 342: } 361,
{ 343: } 363,
{ 344: } 364,
{ 345: } 366,
{ 346: } 368,
{ 347: } 368,
{ 348: } 368,
{ 349: } 368,
{ 350: } 368,
{ 351: } 368,
{ 352: } 368,
{ 353: } 368,
{ 354: } 369,
{ 355: } 371,
{ 356: } 373,
{ 357: } 374,
{ 358: } 375,
{ 359: } 377,
{ 360: } 379,
{ 361: } 381,
{ 362: } 383,
{ 363: } 384,
{ 364: } 385,
{ 365: } 386,
{ 366: } 387,
{ 367: } 388,
{ 368: } 389,
{ 369: } 390,
{ 370: } 392,
{ 371: } 393,
{ 372: } 394,
{ 373: } 394,
{ 374: } 394,
{ 375: } 394,
{ 376: } 396,
{ 377: } 397,
{ 378: } 398,
{ 379: } 399,
{ 380: } 400,
{ 381: } 402,
{ 382: } 404,
{ 383: } 405,
{ 384: } 407,
{ 385: } 408,
{ 386: } 410,
{ 387: } 411,
{ 388: } 412,
{ 389: } 414,
{ 390: } 416,
{ 391: } 418,
{ 392: } 419,
{ 393: } 420,
{ 394: } 422,
{ 395: } 424,
{ 396: } 426,
{ 397: } 428,
{ 398: } 430,
{ 399: } 431
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 2,
{ 3: } 3,
{ 4: } 5,
{ 5: } 6,
{ 6: } 8,
{ 7: } 10,
{ 8: } 12,
{ 9: } 14,
{ 10: } 16,
{ 11: } 18,
{ 12: } 20,
{ 13: } 22,
{ 14: } 24,
{ 15: } 26,
{ 16: } 28,
{ 17: } 30,
{ 18: } 32,
{ 19: } 34,
{ 20: } 36,
{ 21: } 38,
{ 22: } 40,
{ 23: } 42,
{ 24: } 44,
{ 25: } 46,
{ 26: } 48,
{ 27: } 50,
{ 28: } 52,
{ 29: } 54,
{ 30: } 56,
{ 31: } 58,
{ 32: } 60,
{ 33: } 62,
{ 34: } 64,
{ 35: } 66,
{ 36: } 68,
{ 37: } 70,
{ 38: } 72,
{ 39: } 74,
{ 40: } 76,
{ 41: } 78,
{ 42: } 80,
{ 43: } 82,
{ 44: } 84,
{ 45: } 86,
{ 46: } 88,
{ 47: } 90,
{ 48: } 92,
{ 49: } 94,
{ 50: } 95,
{ 51: } 97,
{ 52: } 98,
{ 53: } 100,
{ 54: } 101,
{ 55: } 102,
{ 56: } 103,
{ 57: } 104,
{ 58: } 104,
{ 59: } 105,
{ 60: } 106,
{ 61: } 107,
{ 62: } 108,
{ 63: } 110,
{ 64: } 111,
{ 65: } 112,
{ 66: } 113,
{ 67: } 114,
{ 68: } 115,
{ 69: } 116,
{ 70: } 117,
{ 71: } 118,
{ 72: } 119,
{ 73: } 120,
{ 74: } 121,
{ 75: } 122,
{ 76: } 123,
{ 77: } 124,
{ 78: } 125,
{ 79: } 126,
{ 80: } 127,
{ 81: } 128,
{ 82: } 129,
{ 83: } 130,
{ 84: } 131,
{ 85: } 132,
{ 86: } 133,
{ 87: } 134,
{ 88: } 135,
{ 89: } 136,
{ 90: } 137,
{ 91: } 138,
{ 92: } 139,
{ 93: } 140,
{ 94: } 141,
{ 95: } 142,
{ 96: } 143,
{ 97: } 144,
{ 98: } 145,
{ 99: } 146,
{ 100: } 147,
{ 101: } 148,
{ 102: } 149,
{ 103: } 150,
{ 104: } 151,
{ 105: } 152,
{ 106: } 152,
{ 107: } 153,
{ 108: } 153,
{ 109: } 154,
{ 110: } 155,
{ 111: } 156,
{ 112: } 157,
{ 113: } 158,
{ 114: } 158,
{ 115: } 158,
{ 116: } 158,
{ 117: } 158,
{ 118: } 158,
{ 119: } 158,
{ 120: } 159,
{ 121: } 159,
{ 122: } 159,
{ 123: } 159,
{ 124: } 160,
{ 125: } 160,
{ 126: } 161,
{ 127: } 162,
{ 128: } 163,
{ 129: } 164,
{ 130: } 165,
{ 131: } 166,
{ 132: } 167,
{ 133: } 168,
{ 134: } 169,
{ 135: } 170,
{ 136: } 171,
{ 137: } 172,
{ 138: } 173,
{ 139: } 174,
{ 140: } 175,
{ 141: } 176,
{ 142: } 177,
{ 143: } 178,
{ 144: } 179,
{ 145: } 180,
{ 146: } 181,
{ 147: } 182,
{ 148: } 183,
{ 149: } 184,
{ 150: } 185,
{ 151: } 186,
{ 152: } 187,
{ 153: } 188,
{ 154: } 189,
{ 155: } 190,
{ 156: } 191,
{ 157: } 192,
{ 158: } 194,
{ 159: } 195,
{ 160: } 196,
{ 161: } 197,
{ 162: } 199,
{ 163: } 200,
{ 164: } 201,
{ 165: } 202,
{ 166: } 203,
{ 167: } 204,
{ 168: } 205,
{ 169: } 206,
{ 170: } 207,
{ 171: } 208,
{ 172: } 209,
{ 173: } 209,
{ 174: } 210,
{ 175: } 210,
{ 176: } 211,
{ 177: } 211,
{ 178: } 212,
{ 179: } 213,
{ 180: } 213,
{ 181: } 213,
{ 182: } 213,
{ 183: } 213,
{ 184: } 213,
{ 185: } 214,
{ 186: } 214,
{ 187: } 214,
{ 188: } 214,
{ 189: } 214,
{ 190: } 214,
{ 191: } 215,
{ 192: } 216,
{ 193: } 217,
{ 194: } 218,
{ 195: } 219,
{ 196: } 221,
{ 197: } 223,
{ 198: } 224,
{ 199: } 225,
{ 200: } 226,
{ 201: } 227,
{ 202: } 228,
{ 203: } 229,
{ 204: } 230,
{ 205: } 231,
{ 206: } 232,
{ 207: } 233,
{ 208: } 234,
{ 209: } 235,
{ 210: } 236,
{ 211: } 237,
{ 212: } 238,
{ 213: } 239,
{ 214: } 240,
{ 215: } 242,
{ 216: } 243,
{ 217: } 244,
{ 218: } 245,
{ 219: } 247,
{ 220: } 248,
{ 221: } 249,
{ 222: } 251,
{ 223: } 253,
{ 224: } 254,
{ 225: } 255,
{ 226: } 256,
{ 227: } 257,
{ 228: } 258,
{ 229: } 259,
{ 230: } 260,
{ 231: } 261,
{ 232: } 262,
{ 233: } 263,
{ 234: } 264,
{ 235: } 265,
{ 236: } 266,
{ 237: } 267,
{ 238: } 267,
{ 239: } 268,
{ 240: } 268,
{ 241: } 268,
{ 242: } 268,
{ 243: } 269,
{ 244: } 269,
{ 245: } 269,
{ 246: } 270,
{ 247: } 270,
{ 248: } 270,
{ 249: } 270,
{ 250: } 270,
{ 251: } 270,
{ 252: } 270,
{ 253: } 270,
{ 254: } 270,
{ 255: } 270,
{ 256: } 270,
{ 257: } 270,
{ 258: } 271,
{ 259: } 272,
{ 260: } 274,
{ 261: } 276,
{ 262: } 277,
{ 263: } 278,
{ 264: } 279,
{ 265: } 280,
{ 266: } 281,
{ 267: } 282,
{ 268: } 284,
{ 269: } 286,
{ 270: } 287,
{ 271: } 288,
{ 272: } 289,
{ 273: } 291,
{ 274: } 292,
{ 275: } 293,
{ 276: } 294,
{ 277: } 295,
{ 278: } 297,
{ 279: } 298,
{ 280: } 299,
{ 281: } 300,
{ 282: } 301,
{ 283: } 302,
{ 284: } 304,
{ 285: } 306,
{ 286: } 308,
{ 287: } 309,
{ 288: } 311,
{ 289: } 312,
{ 290: } 313,
{ 291: } 314,
{ 292: } 315,
{ 293: } 316,
{ 294: } 317,
{ 295: } 318,
{ 296: } 319,
{ 297: } 320,
{ 298: } 321,
{ 299: } 322,
{ 300: } 322,
{ 301: } 322,
{ 302: } 322,
{ 303: } 322,
{ 304: } 322,
{ 305: } 322,
{ 306: } 322,
{ 307: } 322,
{ 308: } 322,
{ 309: } 322,
{ 310: } 322,
{ 311: } 322,
{ 312: } 322,
{ 313: } 322,
{ 314: } 324,
{ 315: } 325,
{ 316: } 326,
{ 317: } 328,
{ 318: } 329,
{ 319: } 331,
{ 320: } 332,
{ 321: } 333,
{ 322: } 334,
{ 323: } 336,
{ 324: } 337,
{ 325: } 338,
{ 326: } 339,
{ 327: } 341,
{ 328: } 343,
{ 329: } 345,
{ 330: } 346,
{ 331: } 347,
{ 332: } 348,
{ 333: } 349,
{ 334: } 350,
{ 335: } 352,
{ 336: } 353,
{ 337: } 354,
{ 338: } 356,
{ 339: } 357,
{ 340: } 359,
{ 341: } 360,
{ 342: } 362,
{ 343: } 363,
{ 344: } 365,
{ 345: } 367,
{ 346: } 367,
{ 347: } 367,
{ 348: } 367,
{ 349: } 367,
{ 350: } 367,
{ 351: } 367,
{ 352: } 367,
{ 353: } 368,
{ 354: } 370,
{ 355: } 372,
{ 356: } 373,
{ 357: } 374,
{ 358: } 376,
{ 359: } 378,
{ 360: } 380,
{ 361: } 382,
{ 362: } 383,
{ 363: } 384,
{ 364: } 385,
{ 365: } 386,
{ 366: } 387,
{ 367: } 388,
{ 368: } 389,
{ 369: } 391,
{ 370: } 392,
{ 371: } 393,
{ 372: } 393,
{ 373: } 393,
{ 374: } 393,
{ 375: } 395,
{ 376: } 396,
{ 377: } 397,
{ 378: } 398,
{ 379: } 399,
{ 380: } 401,
{ 381: } 403,
{ 382: } 404,
{ 383: } 406,
{ 384: } 407,
{ 385: } 409,
{ 386: } 410,
{ 387: } 411,
{ 388: } 413,
{ 389: } 415,
{ 390: } 417,
{ 391: } 418,
{ 392: } 419,
{ 393: } 421,
{ 394: } 423,
{ 395: } 425,
{ 396: } 427,
{ 397: } 429,
{ 398: } 430,
{ 399: } 432
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 55,
{ 2: } 109,
{ 3: } 109,
{ 4: } 109,
{ 5: } 110,
{ 6: } 111,
{ 7: } 111,
{ 8: } 111,
{ 9: } 111,
{ 10: } 111,
{ 11: } 111,
{ 12: } 111,
{ 13: } 112,
{ 14: } 112,
{ 15: } 112,
{ 16: } 112,
{ 17: } 113,
{ 18: } 114,
{ 19: } 114,
{ 20: } 114,
{ 21: } 114,
{ 22: } 114,
{ 23: } 114,
{ 24: } 114,
{ 25: } 114,
{ 26: } 114,
{ 27: } 117,
{ 28: } 122,
{ 29: } 125,
{ 30: } 129,
{ 31: } 132,
{ 32: } 135,
{ 33: } 137,
{ 34: } 143,
{ 35: } 146,
{ 36: } 148,
{ 37: } 150,
{ 38: } 152,
{ 39: } 154,
{ 40: } 157,
{ 41: } 161,
{ 42: } 165,
{ 43: } 168,
{ 44: } 170,
{ 45: } 172,
{ 46: } 174,
{ 47: } 177,
{ 48: } 179,
{ 49: } 180,
{ 50: } 186,
{ 51: } 187,
{ 52: } 191,
{ 53: } 193,
{ 54: } 196,
{ 55: } 199,
{ 56: } 199,
{ 57: } 203,
{ 58: } 204,
{ 59: } 205,
{ 60: } 205,
{ 61: } 205,
{ 62: } 205,
{ 63: } 207,
{ 64: } 210,
{ 65: } 211,
{ 66: } 213,
{ 67: } 215,
{ 68: } 217,
{ 69: } 219,
{ 70: } 221,
{ 71: } 223,
{ 72: } 225,
{ 73: } 227,
{ 74: } 229,
{ 75: } 231,
{ 76: } 233,
{ 77: } 235,
{ 78: } 237,
{ 79: } 239,
{ 80: } 241,
{ 81: } 243,
{ 82: } 245,
{ 83: } 247,
{ 84: } 249,
{ 85: } 251,
{ 86: } 253,
{ 87: } 256,
{ 88: } 259,
{ 89: } 261,
{ 90: } 263,
{ 91: } 265,
{ 92: } 267,
{ 93: } 269,
{ 94: } 271,
{ 95: } 273,
{ 96: } 275,
{ 97: } 277,
{ 98: } 279,
{ 99: } 281,
{ 100: } 283,
{ 101: } 285,
{ 102: } 287,
{ 103: } 289,
{ 104: } 291,
{ 105: } 293,
{ 106: } 295,
{ 107: } 299,
{ 108: } 302,
{ 109: } 304,
{ 110: } 304,
{ 111: } 309,
{ 112: } 310,
{ 113: } 313,
{ 114: } 317,
{ 115: } 318,
{ 116: } 321,
{ 117: } 323,
{ 118: } 326,
{ 119: } 329,
{ 120: } 332,
{ 121: } 332,
{ 122: } 335,
{ 123: } 338,
{ 124: } 340,
{ 125: } 340,
{ 126: } 341,
{ 127: } 343,
{ 128: } 345,
{ 129: } 347,
{ 130: } 350,
{ 131: } 352,
{ 132: } 354,
{ 133: } 356,
{ 134: } 358,
{ 135: } 360,
{ 136: } 362,
{ 137: } 364,
{ 138: } 366,
{ 139: } 368,
{ 140: } 370,
{ 141: } 372,
{ 142: } 374,
{ 143: } 376,
{ 144: } 379,
{ 145: } 381,
{ 146: } 383,
{ 147: } 385,
{ 148: } 387,
{ 149: } 389,
{ 150: } 391,
{ 151: } 393,
{ 152: } 395,
{ 153: } 397,
{ 154: } 399,
{ 155: } 401,
{ 156: } 403,
{ 157: } 405,
{ 158: } 407,
{ 159: } 408,
{ 160: } 410,
{ 161: } 412,
{ 162: } 414,
{ 163: } 415,
{ 164: } 417,
{ 165: } 419,
{ 166: } 421,
{ 167: } 423,
{ 168: } 425,
{ 169: } 427,
{ 170: } 429,
{ 171: } 431,
{ 172: } 433,
{ 173: } 436,
{ 174: } 438,
{ 175: } 438,
{ 176: } 440,
{ 177: } 441,
{ 178: } 443,
{ 179: } 443,
{ 180: } 443,
{ 181: } 445,
{ 182: } 446,
{ 183: } 447,
{ 184: } 451,
{ 185: } 455,
{ 186: } 455,
{ 187: } 459,
{ 188: } 460,
{ 189: } 463,
{ 190: } 466,
{ 191: } 467,
{ 192: } 469,
{ 193: } 471,
{ 194: } 473,
{ 195: } 475,
{ 196: } 477,
{ 197: } 478,
{ 198: } 479,
{ 199: } 481,
{ 200: } 485,
{ 201: } 487,
{ 202: } 489,
{ 203: } 491,
{ 204: } 493,
{ 205: } 495,
{ 206: } 497,
{ 207: } 499,
{ 208: } 501,
{ 209: } 503,
{ 210: } 505,
{ 211: } 507,
{ 212: } 509,
{ 213: } 511,
{ 214: } 513,
{ 215: } 515,
{ 216: } 516,
{ 217: } 518,
{ 218: } 520,
{ 219: } 522,
{ 220: } 523,
{ 221: } 525,
{ 222: } 527,
{ 223: } 528,
{ 224: } 529,
{ 225: } 531,
{ 226: } 533,
{ 227: } 535,
{ 228: } 537,
{ 229: } 539,
{ 230: } 541,
{ 231: } 543,
{ 232: } 545,
{ 233: } 547,
{ 234: } 549,
{ 235: } 551,
{ 236: } 553,
{ 237: } 555,
{ 238: } 555,
{ 239: } 557,
{ 240: } 558,
{ 241: } 560,
{ 242: } 561,
{ 243: } 563,
{ 244: } 564,
{ 245: } 566,
{ 246: } 568,
{ 247: } 568,
{ 248: } 570,
{ 249: } 571,
{ 250: } 572,
{ 251: } 576,
{ 252: } 577,
{ 253: } 578,
{ 254: } 581,
{ 255: } 584,
{ 256: } 587,
{ 257: } 590,
{ 258: } 591,
{ 259: } 593,
{ 260: } 595,
{ 261: } 596,
{ 262: } 597,
{ 263: } 599,
{ 264: } 601,
{ 265: } 603,
{ 266: } 605,
{ 267: } 607,
{ 268: } 609,
{ 269: } 610,
{ 270: } 611,
{ 271: } 613,
{ 272: } 615,
{ 273: } 617,
{ 274: } 618,
{ 275: } 620,
{ 276: } 622,
{ 277: } 624,
{ 278: } 626,
{ 279: } 627,
{ 280: } 629,
{ 281: } 631,
{ 282: } 633,
{ 283: } 635,
{ 284: } 637,
{ 285: } 638,
{ 286: } 639,
{ 287: } 640,
{ 288: } 642,
{ 289: } 643,
{ 290: } 645,
{ 291: } 647,
{ 292: } 649,
{ 293: } 651,
{ 294: } 653,
{ 295: } 655,
{ 296: } 657,
{ 297: } 659,
{ 298: } 661,
{ 299: } 663,
{ 300: } 665,
{ 301: } 667,
{ 302: } 668,
{ 303: } 669,
{ 304: } 671,
{ 305: } 672,
{ 306: } 674,
{ 307: } 676,
{ 308: } 678,
{ 309: } 681,
{ 310: } 684,
{ 311: } 688,
{ 312: } 691,
{ 313: } 694,
{ 314: } 695,
{ 315: } 696,
{ 316: } 698,
{ 317: } 700,
{ 318: } 701,
{ 319: } 703,
{ 320: } 704,
{ 321: } 706,
{ 322: } 708,
{ 323: } 710,
{ 324: } 711,
{ 325: } 713,
{ 326: } 715,
{ 327: } 717,
{ 328: } 718,
{ 329: } 719,
{ 330: } 720,
{ 331: } 722,
{ 332: } 724,
{ 333: } 726,
{ 334: } 728,
{ 335: } 730,
{ 336: } 731,
{ 337: } 733,
{ 338: } 735,
{ 339: } 736,
{ 340: } 738,
{ 341: } 739,
{ 342: } 741,
{ 343: } 742,
{ 344: } 744,
{ 345: } 745,
{ 346: } 746,
{ 347: } 747,
{ 348: } 748,
{ 349: } 750,
{ 350: } 754,
{ 351: } 757,
{ 352: } 759,
{ 353: } 761,
{ 354: } 763,
{ 355: } 764,
{ 356: } 765,
{ 357: } 767,
{ 358: } 769,
{ 359: } 770,
{ 360: } 771,
{ 361: } 772,
{ 362: } 773,
{ 363: } 775,
{ 364: } 777,
{ 365: } 779,
{ 366: } 781,
{ 367: } 783,
{ 368: } 785,
{ 369: } 787,
{ 370: } 788,
{ 371: } 790,
{ 372: } 792,
{ 373: } 794,
{ 374: } 797,
{ 375: } 799,
{ 376: } 799,
{ 377: } 799,
{ 378: } 801,
{ 379: } 803,
{ 380: } 805,
{ 381: } 806,
{ 382: } 807,
{ 383: } 809,
{ 384: } 810,
{ 385: } 812,
{ 386: } 813,
{ 387: } 815,
{ 388: } 817,
{ 389: } 818,
{ 390: } 818,
{ 391: } 819,
{ 392: } 821,
{ 393: } 823,
{ 394: } 824,
{ 395: } 825,
{ 396: } 826,
{ 397: } 827,
{ 398: } 828,
{ 399: } 830
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 54,
{ 1: } 108,
{ 2: } 108,
{ 3: } 108,
{ 4: } 109,
{ 5: } 110,
{ 6: } 110,
{ 7: } 110,
{ 8: } 110,
{ 9: } 110,
{ 10: } 110,
{ 11: } 110,
{ 12: } 111,
{ 13: } 111,
{ 14: } 111,
{ 15: } 111,
{ 16: } 112,
{ 17: } 113,
{ 18: } 113,
{ 19: } 113,
{ 20: } 113,
{ 21: } 113,
{ 22: } 113,
{ 23: } 113,
{ 24: } 113,
{ 25: } 113,
{ 26: } 116,
{ 27: } 121,
{ 28: } 124,
{ 29: } 128,
{ 30: } 131,
{ 31: } 134,
{ 32: } 136,
{ 33: } 142,
{ 34: } 145,
{ 35: } 147,
{ 36: } 149,
{ 37: } 151,
{ 38: } 153,
{ 39: } 156,
{ 40: } 160,
{ 41: } 164,
{ 42: } 167,
{ 43: } 169,
{ 44: } 171,
{ 45: } 173,
{ 46: } 176,
{ 47: } 178,
{ 48: } 179,
{ 49: } 185,
{ 50: } 186,
{ 51: } 190,
{ 52: } 192,
{ 53: } 195,
{ 54: } 198,
{ 55: } 198,
{ 56: } 202,
{ 57: } 203,
{ 58: } 204,
{ 59: } 204,
{ 60: } 204,
{ 61: } 204,
{ 62: } 206,
{ 63: } 209,
{ 64: } 210,
{ 65: } 212,
{ 66: } 214,
{ 67: } 216,
{ 68: } 218,
{ 69: } 220,
{ 70: } 222,
{ 71: } 224,
{ 72: } 226,
{ 73: } 228,
{ 74: } 230,
{ 75: } 232,
{ 76: } 234,
{ 77: } 236,
{ 78: } 238,
{ 79: } 240,
{ 80: } 242,
{ 81: } 244,
{ 82: } 246,
{ 83: } 248,
{ 84: } 250,
{ 85: } 252,
{ 86: } 255,
{ 87: } 258,
{ 88: } 260,
{ 89: } 262,
{ 90: } 264,
{ 91: } 266,
{ 92: } 268,
{ 93: } 270,
{ 94: } 272,
{ 95: } 274,
{ 96: } 276,
{ 97: } 278,
{ 98: } 280,
{ 99: } 282,
{ 100: } 284,
{ 101: } 286,
{ 102: } 288,
{ 103: } 290,
{ 104: } 292,
{ 105: } 294,
{ 106: } 298,
{ 107: } 301,
{ 108: } 303,
{ 109: } 303,
{ 110: } 308,
{ 111: } 309,
{ 112: } 312,
{ 113: } 316,
{ 114: } 317,
{ 115: } 320,
{ 116: } 322,
{ 117: } 325,
{ 118: } 328,
{ 119: } 331,
{ 120: } 331,
{ 121: } 334,
{ 122: } 337,
{ 123: } 339,
{ 124: } 339,
{ 125: } 340,
{ 126: } 342,
{ 127: } 344,
{ 128: } 346,
{ 129: } 349,
{ 130: } 351,
{ 131: } 353,
{ 132: } 355,
{ 133: } 357,
{ 134: } 359,
{ 135: } 361,
{ 136: } 363,
{ 137: } 365,
{ 138: } 367,
{ 139: } 369,
{ 140: } 371,
{ 141: } 373,
{ 142: } 375,
{ 143: } 378,
{ 144: } 380,
{ 145: } 382,
{ 146: } 384,
{ 147: } 386,
{ 148: } 388,
{ 149: } 390,
{ 150: } 392,
{ 151: } 394,
{ 152: } 396,
{ 153: } 398,
{ 154: } 400,
{ 155: } 402,
{ 156: } 404,
{ 157: } 406,
{ 158: } 407,
{ 159: } 409,
{ 160: } 411,
{ 161: } 413,
{ 162: } 414,
{ 163: } 416,
{ 164: } 418,
{ 165: } 420,
{ 166: } 422,
{ 167: } 424,
{ 168: } 426,
{ 169: } 428,
{ 170: } 430,
{ 171: } 432,
{ 172: } 435,
{ 173: } 437,
{ 174: } 437,
{ 175: } 439,
{ 176: } 440,
{ 177: } 442,
{ 178: } 442,
{ 179: } 442,
{ 180: } 444,
{ 181: } 445,
{ 182: } 446,
{ 183: } 450,
{ 184: } 454,
{ 185: } 454,
{ 186: } 458,
{ 187: } 459,
{ 188: } 462,
{ 189: } 465,
{ 190: } 466,
{ 191: } 468,
{ 192: } 470,
{ 193: } 472,
{ 194: } 474,
{ 195: } 476,
{ 196: } 477,
{ 197: } 478,
{ 198: } 480,
{ 199: } 484,
{ 200: } 486,
{ 201: } 488,
{ 202: } 490,
{ 203: } 492,
{ 204: } 494,
{ 205: } 496,
{ 206: } 498,
{ 207: } 500,
{ 208: } 502,
{ 209: } 504,
{ 210: } 506,
{ 211: } 508,
{ 212: } 510,
{ 213: } 512,
{ 214: } 514,
{ 215: } 515,
{ 216: } 517,
{ 217: } 519,
{ 218: } 521,
{ 219: } 522,
{ 220: } 524,
{ 221: } 526,
{ 222: } 527,
{ 223: } 528,
{ 224: } 530,
{ 225: } 532,
{ 226: } 534,
{ 227: } 536,
{ 228: } 538,
{ 229: } 540,
{ 230: } 542,
{ 231: } 544,
{ 232: } 546,
{ 233: } 548,
{ 234: } 550,
{ 235: } 552,
{ 236: } 554,
{ 237: } 554,
{ 238: } 556,
{ 239: } 557,
{ 240: } 559,
{ 241: } 560,
{ 242: } 562,
{ 243: } 563,
{ 244: } 565,
{ 245: } 567,
{ 246: } 567,
{ 247: } 569,
{ 248: } 570,
{ 249: } 571,
{ 250: } 575,
{ 251: } 576,
{ 252: } 577,
{ 253: } 580,
{ 254: } 583,
{ 255: } 586,
{ 256: } 589,
{ 257: } 590,
{ 258: } 592,
{ 259: } 594,
{ 260: } 595,
{ 261: } 596,
{ 262: } 598,
{ 263: } 600,
{ 264: } 602,
{ 265: } 604,
{ 266: } 606,
{ 267: } 608,
{ 268: } 609,
{ 269: } 610,
{ 270: } 612,
{ 271: } 614,
{ 272: } 616,
{ 273: } 617,
{ 274: } 619,
{ 275: } 621,
{ 276: } 623,
{ 277: } 625,
{ 278: } 626,
{ 279: } 628,
{ 280: } 630,
{ 281: } 632,
{ 282: } 634,
{ 283: } 636,
{ 284: } 637,
{ 285: } 638,
{ 286: } 639,
{ 287: } 641,
{ 288: } 642,
{ 289: } 644,
{ 290: } 646,
{ 291: } 648,
{ 292: } 650,
{ 293: } 652,
{ 294: } 654,
{ 295: } 656,
{ 296: } 658,
{ 297: } 660,
{ 298: } 662,
{ 299: } 664,
{ 300: } 666,
{ 301: } 667,
{ 302: } 668,
{ 303: } 670,
{ 304: } 671,
{ 305: } 673,
{ 306: } 675,
{ 307: } 677,
{ 308: } 680,
{ 309: } 683,
{ 310: } 687,
{ 311: } 690,
{ 312: } 693,
{ 313: } 694,
{ 314: } 695,
{ 315: } 697,
{ 316: } 699,
{ 317: } 700,
{ 318: } 702,
{ 319: } 703,
{ 320: } 705,
{ 321: } 707,
{ 322: } 709,
{ 323: } 710,
{ 324: } 712,
{ 325: } 714,
{ 326: } 716,
{ 327: } 717,
{ 328: } 718,
{ 329: } 719,
{ 330: } 721,
{ 331: } 723,
{ 332: } 725,
{ 333: } 727,
{ 334: } 729,
{ 335: } 730,
{ 336: } 732,
{ 337: } 734,
{ 338: } 735,
{ 339: } 737,
{ 340: } 738,
{ 341: } 740,
{ 342: } 741,
{ 343: } 743,
{ 344: } 744,
{ 345: } 745,
{ 346: } 746,
{ 347: } 747,
{ 348: } 749,
{ 349: } 753,
{ 350: } 756,
{ 351: } 758,
{ 352: } 760,
{ 353: } 762,
{ 354: } 763,
{ 355: } 764,
{ 356: } 766,
{ 357: } 768,
{ 358: } 769,
{ 359: } 770,
{ 360: } 771,
{ 361: } 772,
{ 362: } 774,
{ 363: } 776,
{ 364: } 778,
{ 365: } 780,
{ 366: } 782,
{ 367: } 784,
{ 368: } 786,
{ 369: } 787,
{ 370: } 789,
{ 371: } 791,
{ 372: } 793,
{ 373: } 796,
{ 374: } 798,
{ 375: } 798,
{ 376: } 798,
{ 377: } 800,
{ 378: } 802,
{ 379: } 804,
{ 380: } 805,
{ 381: } 806,
{ 382: } 808,
{ 383: } 809,
{ 384: } 811,
{ 385: } 812,
{ 386: } 814,
{ 387: } 816,
{ 388: } 817,
{ 389: } 817,
{ 390: } 818,
{ 391: } 820,
{ 392: } 822,
{ 393: } 823,
{ 394: } 824,
{ 395: } 825,
{ 396: } 826,
{ 397: } 827,
{ 398: } 829,
{ 399: } 830
);


var yyn : Integer;

label start, scan, action;

begin

start:

  (* initialize: *)

  yynew;

scan:

  (* mark positions and matches: *)

  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);
  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);

  if yytl[yystate]>yyth[yystate] then goto action; (* dead state *)

  (* get next character: *)

  yyscan;

  (* determine action: *)

  yyn := yytl[yystate];
  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);
  if yyn>yyth[yystate] then goto action;
    (* no transition on yyactchar in this state *)

  (* switch to new state: *)

  yystate := yyt[yyn].s;

  goto scan;

action:

  (* execute action: *)

  if yyfind(yyrule) then
    begin
      yyaction(yyrule);
      if yyreject then goto action;
    end
  else if not yydefault and yywrap then
    begin
      yyclear;
      return(0);
    end;

  if not yydone then goto start;

  yylex := yyretval;

end(*yylex*);


