#
# Generalised Bitmap Module
#
# OS/2
# IBM VisualAge C++ 3, with latest fixpacks
#
# Builds zlib objects which are compiled multithreaded
# Therefore all users should also be multithreaded
#
IDIR = bin

CWARNS     = /W2 /Wcnd+cns+dcl+ord+par+pro+rea+ret+use+
CFLAGS     = /C+ $(CWARNS) /G5 /Gd-m+ /Q+ /O+ /Os- /Gf+ /DNDEBUG
CFLAGS_DBG = /C+ $(CWARNS) /G5 /Gd-m+ /Q+ /O+ /Os- /Gf+ /Ti+ /Tm+ /DDEBUG
CFLAGS_DLL = $(CFLAGS) /Ge-
CFLAGS_DLL_DBG = $(CFLAGS_DBG) /Ge-

LFLAGS     = /NOI /ALIGN:4 /NOLOGO
LFLAGS_DBG = /NOI /ALIGN:4 /NOLOGO /DEBUG /DBGPACK
LFLAGS_DLL = $(LFLAGS) /NOE /DLL /EXEPACK:2 /OPTFUNC /PACKCODE /PACKDATA
LFLAGS_DLL_DBG = $(LFLAGS_DBG) /NOE /DLL

# For debugging call nmake or wmake with debug=on
!ifdef debug
CFLAGS     = $(CFLAGS_DBG)
CFLAGS_DLL = $(CFLAGS_DLL_DBG)
LFLAGS     = $(LFLAGS_DBG)
LFLAGS_DLL = $(LFLAGS_DLL_DBG)
!endif

.SUFFIXES:	.c .obj

.c.obj:
		icc $(CFLAGS_DLL) $*.c

#

OBJS = adler32.obj compress.obj crc32.obj gzio.obj uncompr.obj deflate.obj trees.obj \
       zutil.obj inflate.obj infback.obj inftrees.obj inffast.obj


all:   z.lib z.dll zdll.lib

z.dll:  $(OBJS) zlib.def
        ilink $(LFLAGS_DLL) /OUT:$@ @<<
        $**
<<

zdll.lib:  zlib.def
	       implib /NOLOGO /NOI $@ $**

z.lib:   $(OBJS)
         -del /N $@ 2> nul
          ilib /NOLOGO $@ $**;

z.obj:   zlib.h zconf.h trees.h deflate.h zutil.h               \
         inftrees.h inffast.h inflate.h inffixed.h crc32.h
         icc $(CFLAGS_DLL) $*.c


# ------------------------
# Build management targets
# ------------------------

clean:
		 -del /N *.obj 2> nul

clobber:
		 -del /N *.obj *.lib *.dll $(IDIR)\* 2> nul

install:
         copy z.dll     $(IDIR)
         copy z.lib     $(IDIR)
         copy zdll.lib  $(IDIR)
         copy zlib.h    $(IDIR)
         copy zconf.h   $(IDIR)

package:
         -del /N $(IDIR)\zlib123.zip
         zip -9 $(IDIR)\zlib123.zip z.dll z.lib zdll.lib zlib.h zconf.h

